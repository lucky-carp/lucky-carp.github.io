<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LuckyCarp</title>
  
  <subtitle>A carp swimming in the ocean of knowledge.</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-05-19T07:11:24.029Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Yang Li</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何应用对第三方库的改动？</title>
    <link href="http://example.com/diffpatch/"/>
    <id>http://example.com/diffpatch/</id>
    <published>2023-05-19T07:09:34.000Z</published>
    <updated>2023-05-19T07:11:24.029Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h3><p>microsim项目中需要将硬件每一拍的运行日志数据保存下来，后续对其进行分析。使用的日志库是spdlog，版本是1.9.2。本项目希望借助一个高性能的数据库来存储日志数据，选取了clickhouse作为数据服务载体。但是由于日志库提供的接口有限，因此需要自己实现一个专门用于写入clickhouse数据库的日志接口。现已完成，具体实现为了database_sink类。对于spdlog的改动主要为：新增了database_sink.h文件，对stdout_color_sinks-inl.h文件进行了改动。</p><p>为了后续使用spdlog库时可以基于稳定版本spdlog-1.9.2来实现，因此需要采用补丁的形式，将改动应用到spdlog库中。</p><hr><h4 id="主要技术"><a href="#主要技术" class="headerlink" title="主要技术"></a>主要技术</h4><ul><li><strong>spdlog：</strong>spdlog是一个快速的异步日志库，用于C ++。它可以记录到控制台，文件，多个文件，Syslog，网络和其他流。spdlog旨在既能够满足高性能的需求，又能够简单易用。它的特点包括高吞吐量，低延迟，线程安全，支持多种格式（例如日志级别，日期和时间戳，线程ID等），以及支持动态日志分级。此外，它支持多个前端和后端，可以轻松地定制日志的格式和存储位置。</li><li><strong>clickhouse：</strong>clickhouse-cpp是一个轻量级的C ++客户端库，用于连接和与ClickHouse数据库交互。ClickHouse是一个开源的列式数据库管理系统，主要用于在线分析处理（OLAP）应用程序。clickhouse-cpp库提供了几个功能，包括连接到ClickHouse服务器，执行查询语句，获取查询结果等。它旨在提供高效的性能，可靠性和易于使用的API。它支持异步和同步查询，可以轻松地集成到现有的C ++应用程序中。</li><li><strong>diff命令：</strong>diff命令是一个UNIX和类UNIX操作系统中的命令行工具，用于比较两个文件或目录之间的差异。它会逐行比较两个文件的内容，并显示出它们之间的不同点。diff命令通常与其他工具（例如patch和git）一起使用，以便对文件进行修改、合并和版本控制等操作。diff命令可以在不同的比较模式下运行，例如逐字、逐行或上下文模式，这些模式可以根据需要进行调整。除了比较文件、目录以外，diff命令还可以用于比较文本字符串或STDIN中的内容。</li><li><strong>patch命令：</strong>patch命令是一个UNIX和类UNIX操作系统中的命令行工具，用于将差异文件（patch文件）应用于源文件，以更新或修改源文件。差异文件（patch文件）是由diff命令生成的一种文件，其中包含了源文件和目标文件之间的更改。patch命令可以根据差异文件（patch文件）中的信息自动更新源文件，或者可以通过手动选择或编辑来更新源文件。patch命令通常用于应用软件或系统的更新和修补程序。它的基本用法是将差异文件（patch文件）作为输入，然后将其应用于某个或多个源文件或目录。</li></ul><hr><h3 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h3><ol><li><p>首先需要将spdlog-1.9.2.tar.gz解压缩：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxf spdlog-1.9.2.tar.gz</span><br></pre></td></tr></table></figure><p>生成了spdlog-1.9.2文件夹</p></li><li><p>因为改动位于lib下的spdlog&#x2F;include&#x2F;spdlog&#x2F;sinks文件夹中，因此使用diff比较两个文件夹，生成.patch文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">diff -Naur spdlog-1.9.2/include/spdlog/sinks/ /lib/spdlog/include/spdlog/sinks &gt; spdlog-db.patch</span><br></pre></td></tr></table></figure><p>这样将在当前目录下生成一个 spdlog-db.patch文件。</p><ul><li><code>-N</code>选项指示diff在两个不相交的文件中查找范围，而不是将缺少的文件视为空文件。这样可以避免误报删除的文件中存在的某些差异。</li><li><code>-a</code>选项告诉diff将二进制文件视为文本文件，并对其执行比较。</li><li><code>-u</code>选项生成”unified diff”格式的输出，显示两个文件的整个内容，并将它们之间的不同点以一种易于理解的方式显示出来。</li><li><code>-r</code>选项允许diff递归地比较目录和它们的内容。</li></ul><p>此格式的输出通常用于比较文件和目录，并用于在软件开发过程中创建补丁和应用程序更新。</p></li><li><p>将.patch文件应用到原来的spdlog-1.9.2库中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">patch -p4 -d spdlog-1.9.2/include/spdlog/sinks/ ./spdlog-db.patch</span><br></pre></td></tr></table></figure><ul><li><code>-p4</code>指定patch命令应该忽略路径前缀，即将路径前缀中的4个（分隔符分隔的）部分（例如<code>a/b/c/d</code>）逐个剥离，因此patch文件中应用修补程序时的路径会受到影响。实际上，它在路径中自动跳过3个组件。</li><li><code>-d</code>选项用于指定patch文件中要应用补丁的目录，因此在应用补丁程序时，patch命令会切换到指定的目录，以便在该目录中执行文件操作。通常，此选项与-p选项结合使用，以确保patch命令在正确的位置查找文件。</li></ul></li></ol><hr><h3 id="编写补丁脚本"><a href="#编写补丁脚本" class="headerlink" title="编写补丁脚本"></a>编写补丁脚本</h3><p>以下是在microsim&#x2F;3rdparty&#x2F;scripts下的build-spdlog-linux-gcc-debug.sh的内容，执行该脚本，即可将spdlog-1.9.2.tar.gz先解压缩后install到lib下，然后再打上补丁。</p><p>注：spdlog-db.patch文件在3rdparty&#x2F;packages路径下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">export COMPILER=gcc</span><br><span class="line">export OS=linux</span><br><span class="line">export BUILDTYPE=debug</span><br><span class="line">export BUILDTREE_DIR=&#x27;pwd&#x27;/../buildtree</span><br><span class="line">export NAME=&#x27;spdlog&#x27;</span><br><span class="line">export VERSION=&quot;$NAME&quot;</span><br><span class="line">export SPD_VERSION=&#x27;-1.9.2&#x27;</span><br><span class="line">export INSTALL_ROOT=$BUILDTREE_DIR/../../lib/$OS/$COMPILER/$BUILDTYPE</span><br><span class="line"></span><br><span class="line">rm -rf $BUILDTREE_DIR/$VERSION</span><br><span class="line">rm -rf $INSTALL_ROOT/$NAME</span><br><span class="line"></span><br><span class="line">tar -zxf $BUILDTREE_DIR/../packages/$VERSION$SPD_VERSION.tar.gz -C $BUILDTREE_DIR</span><br><span class="line"></span><br><span class="line">cd $BUILDTREE_DIR/$VERSION$SPD_VERSION</span><br><span class="line"></span><br><span class="line">mkdir build</span><br><span class="line">cd build</span><br><span class="line"></span><br><span class="line">cmake -DCMAKE_BUILD_TYPE=$BUILDTYPE -DCMAKE_INSTALL_PREFIX=$INSTALL_ROOT/$NAME -DSPDLOG_B UILD_SHARED=1 ../</span><br><span class="line"></span><br><span class="line">VERBOSE=1 make -j 4</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line">patch -p4 -d $INSTALL_ROOT/$NAME/include/spdlog/sinks &lt; $BUILDTREE_DIR/../packages/spdlog-db.patch</span><br><span class="line"></span><br><span class="line">rm -rf $BUILDTREE_DIR/$VERSION$SPD_VERSION</span><br></pre></td></tr></table></figure><p>大功告成。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前情提要&quot;&gt;&lt;a href=&quot;#前情提要&quot; class=&quot;headerlink&quot; title=&quot;前情提要&quot;&gt;&lt;/a&gt;前情提要&lt;/h3&gt;&lt;p&gt;microsim项目中需要将硬件每一拍的运行日志数据保存下来，后续对其进行分析。使用的日志库是spdlog，版本是1.9.2</summary>
      
    
    
    
    <category term="Technology" scheme="http://example.com/categories/Technology/"/>
    
    
    <category term="Engineering" scheme="http://example.com/tags/Engineering/"/>
    
  </entry>
  
  <entry>
    <title>Training Day——练肩</title>
    <link href="http://example.com/fitness0510/"/>
    <id>http://example.com/fitness0510/</id>
    <published>2023-05-11T06:18:56.000Z</published>
    <updated>2023-05-11T06:21:48.975Z</updated>
    
    <content type="html"><![CDATA[<p>私教课的第三节，今天练肩！</p><p>本篇blog将根据这次私教课的内容进行扩充延申，并从肩部肌群的细节出发，分析高效训练动作，作为健身小白，纯属记录，一方面提升自己对肌肉增长理论知识的认识，一方面方便之后回顾训练。</p><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;私教课的第三节，今天练肩！&lt;/p&gt;
&lt;p&gt;本篇blog将根据这次私教课的内容进行扩充延申，并从肩部肌群的细节出发，分析高效训练动作，作为健身小白，纯属记录，一方面提升自己对肌肉增长理论知识的认识，一方面方便之后回顾训练。&lt;/p&gt;
&lt;hr&gt;
</summary>
      
    
    
    
    <category term="Life" scheme="http://example.com/categories/Life/"/>
    
    
    <category term="Fitness" scheme="http://example.com/tags/Fitness/"/>
    
  </entry>
  
  <entry>
    <title>ClickHouse——基础学习</title>
    <link href="http://example.com/clickhouse-base/"/>
    <id>http://example.com/clickhouse-base/</id>
    <published>2023-05-09T11:07:26.000Z</published>
    <updated>2023-05-10T07:07:43.775Z</updated>
    
    <content type="html"><![CDATA[<p>本篇记录了clickhouse的基础知识，用于回顾。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本篇记录了clickhouse的基础知识，用于回顾。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="Technology" scheme="http://example.com/categories/Technology/"/>
    
    
    <category term="knowledge" scheme="http://example.com/tags/knowledge/"/>
    
  </entry>
  
  <entry>
    <title>Training Day——练胸</title>
    <link href="http://example.com/fitness0508/"/>
    <id>http://example.com/fitness0508/</id>
    <published>2023-05-09T10:28:32.000Z</published>
    <updated>2023-05-11T06:21:50.575Z</updated>
    
    <content type="html"><![CDATA[<p>私教课的第二节，今天练胸！</p><p>本篇blog将根据这次私教课的内容进行扩充延申，对胸肌训练进行细节讲述，作为一枚健身小白，纯属记录。</p><hr><h3 id="先从胸肌的组成结构出发"><a href="#先从胸肌的组成结构出发" class="headerlink" title="先从胸肌的组成结构出发"></a>先从胸肌的组成结构出发</h3><p>首先我们来熟悉一下胸部主要<strong>肌肉群的构成</strong>以及胸部肌肉的<strong>收缩方向</strong>。</p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/lucky-carp/picx-images-hosting@master/20230510/v2-78fce99b0174f830b15c94fd5212d4bf_720w.6fgfn2mkxfg0.webp"                                     ></p><p>我们的胸肌分为三部分，也就是我们俗称的<strong>上胸，中胸，下胸。</strong>因此才会出现我们各式各样的训练胸部的方式，究其原因是胸部的组成比较复杂。最为经典的胸部训练方式是：</p><ol><li>哑铃平板卧推：中下</li><li>上斜各种卧推：上中</li><li>双杠臂屈伸：下中</li><li>飞鸟：中缝和止点</li></ol><p>这四类动作基本囊括了<strong>胸部的几块肌肉</strong>。</p><hr><h3 id="胸部的训练要点"><a href="#胸部的训练要点" class="headerlink" title="胸部的训练要点"></a>胸部的训练要点</h3><p>感受胸肌发力，亦或者是训练胸肌，有一个非常重要的诀窍，就一个字：<strong>夹</strong>。</p><h4 id="什么是夹？"><a href="#什么是夹？" class="headerlink" title="什么是夹？"></a>什么是夹？</h4><p>我知道你听了一定会觉得懵圈，这个夹到底是个什么东西？我们得从胸部的肌肉纤维走向说起。</p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/lucky-carp/picx-images-hosting@master/20230510/v2-fe639b8de05c3ff48c0fe329aec1ae7a_720w.4pvbjcnm6260.webp"                                     ></p><p>胸部的肌肉纤维<strong>从中缝指向了三角肌前束下方，</strong>这意味着，你要使得胸部的肌肉从最长收缩到最短你只能通过<strong>将三角肌前束靠近你的胸部中缝</strong>。这么说有一点拗口，实际上就是<strong>双手合十</strong>。</p><p>然而，双手合十挤压胸部，我们一般来说叫做：<strong>夹（挤）</strong></p><hr><h4 id="胸肌训练与夹的关系"><a href="#胸肌训练与夹的关系" class="headerlink" title="胸肌训练与夹的关系"></a>胸肌训练与夹的关系</h4><p>胸肌只要完成一次肌肉从最长到最短的运动，再附上合适分重量，我们就完成了一次胸部肌肉的锻炼。这意味着，所有的胸部训练，我们实际上都是在做【<strong>夹】</strong>这个动作，只不过是以各种形式来体现。</p><p>当然，在实际训练生活中，我们最常见的动作取名竟然叫【<strong>xx推</strong>】，这个取名导致了很多新手在训练胸部时使劲的推，导致了三角肌前束、三头发力过多，而胸肌没有发力感。</p><p><strong>那么这里得明确一下，所有的胸部训练他实际上都不是推的过程，而全部都是夹的过程。</strong></p><hr><h4 id="推类动作怎么夹？"><a href="#推类动作怎么夹？" class="headerlink" title="推类动作怎么夹？"></a>推类动作怎么夹？</h4><p>我们在看别人做推类练胸动作的时候，很难<strong>想象</strong>这实际上是一个<strong>夹</strong>类动作，比较经典的夹动作就是绳索夹胸，很形象很自然：</p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/lucky-carp/picx-images-hosting@master/20230510/v2-454f1081665211c8738c366a331aca07_720w.76zh36az57o0.webp"                                     ></p><p>那么推类动作怎么算是夹呢？实际上我们在锻炼胸部的时候，<strong>大脑要想着我们手肘，向上推的过程中，把我们胸部发力想象成绳索夹胸的【夹】。</strong></p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/lucky-carp/picx-images-hosting@master/20230510/v2-0129c9156517a0d8fc60510be2ed394d_720w.7b7ekeg4dgc0.webp"                                     ></p><hr><h4 id="肩胛骨后收"><a href="#肩胛骨后收" class="headerlink" title="肩胛骨后收"></a>肩胛骨后收</h4><p>新手在训练胸部肌肉的时候，沉肩和以及收紧肩胛骨（夹背）都做不好，究其原因就是生活中类似这种孤立胸部发力的姿势比较少。因此在做胸肌训练时，一定要主观的让肩胛骨收紧再去做动作，如下方式能够让肩胛骨充分收紧：</p><ol><li>挺胸</li><li>把肩膀放下来</li><li>把背部夹紧</li></ol><p>上面三个步骤之后，我们将得到一个比较完美的肩胛骨后收的状态。</p><p><strong>如果不这么做，那么【肩膀】势必会参与胸部训练过多，导致胸部训练不充分。</strong></p><hr><h3 id="私教训练记录"><a href="#私教训练记录" class="headerlink" title="私教训练记录"></a>私教训练记录</h3><p>健身教练姓林，练的很壮，且懂得康复治疗的方法，是一个比较可信的教练，教的也很细节很耐心。本节记录下这次私教课的过程。</p><h4 id="热身运动"><a href="#热身运动" class="headerlink" title="热身运动"></a>热身运动</h4><p>林教练的热身与其他热身不同，他主要主张先把肌肉群放松开，并把脊柱拉伸开，防止受伤。</p><p>首先，先对我的胸小肌进行了放松，那叫一个痛啊，也能感受到胸小肌以及肩前束与胸肌连接处有结节。按摩松解了15分钟开始对脊柱拉伸。</p><ul><li><p>髋关节灵活性训练</p><ul><li>两腿弯曲90°，坐在垫子上，腰部停止，腿部向左右倾倒，单侧膝盖去找另一侧脚后跟，贴到地面后臀部发力把身体挺起来。</li><li>一组左右各10次，做两组。</li></ul></li><li><p>核心训练——腹式呼吸</p><ol><li>吸气，让肚子鼓起来，把气吸到肚子里不要让胸部有起伏。</li><li>吐气，腹部要慢慢下沉，肚皮去贴后腰。</li></ol><ul><li>注意：要保持腹部肌肉发力，如果找不到发力的感觉，可以把两腿弯曲举起来，小腿与地面平行。</li><li>一组10次，做3组。</li></ul></li><li><p>脊柱拉伸——坐姿上展</p><ul><li>盘腿而坐，两手向上伸直，想象双手上方和头部上方有一张纸，努力去触碰。感受后背和腰部脊柱被拉伸。</li><li>每组45秒，做3组。</li></ul></li><li><p>脊柱拉伸——小燕飞</p><ul><li>趴在地上，核心收紧，四肢向上抬起，大拇指外翻向上，肩关节向后旋，夹紧后背。</li><li>每组30秒，做3组。</li></ul></li></ul><hr><h4 id="训练前感受胸部发力"><a href="#训练前感受胸部发力" class="headerlink" title="训练前感受胸部发力"></a>训练前感受胸部发力</h4><ol><li>双腿微弯，倚靠在墙面上，两臂打开，感受前面有一个人，收缩胸肌，想象要把它抱住。</li></ol><ul><li>注意沉肩，感受胸肌挤压的感觉。注意核心收紧。</li></ul><blockquote><p>这里申明一点：在上肢的训练动作中，无论是肩部还是胸部训练，都要保证肩关节高于肘关节高于腕关节，不用刻意去做，只是要注意。另外，为了保护肘关节，在做伸展过程时，不要把手臂完全伸直。</p></blockquote><ol start="2"><li>保持其他部位不动，双手抱拳，手臂弯曲，向前发力，一样地，感受胸肌被挤压地感觉，向中间夹胸，而不是推。</li></ol><hr><h4 id="正式训练"><a href="#正式训练" class="headerlink" title="正式训练"></a>正式训练</h4><h5 id="平板卧推"><a href="#平板卧推" class="headerlink" title="平板卧推"></a>平板卧推</h5><ul><li><p>平躺在座椅上，双腿踩实地面，保持核心收紧，如果核心不稳，可以把双腿抬起来，弯曲90°，小腿平行地面，再收紧核心。</p></li><li><p>双臂打开，注意沉肩，后背夹紧，注意握距要保证下放时小臂垂直地面。</p></li><li><p>起始位置应在眼睛正上方。下放时，画弧线落在胸骨，上举时，画弧线回到初始位置。</p></li><li><p>注意，下放时大臂和身体的夹角约为70°，不应该完全打开。</p></li><li><p>40kg×12做3组，60kg×3做3组。</p></li><li><p>教练说，大重量的是一定要练的，尝试做自己的极限重量，哪怕做一个也可以。</p></li></ul><h5 id="蝴蝶机夹胸"><a href="#蝴蝶机夹胸" class="headerlink" title="蝴蝶机夹胸"></a>蝴蝶机夹胸</h5><ul><li>调整座椅高度，保证肩高于肘高于腕，如果座椅不够高，可以蹲靠在靠背上面。</li><li>夹胸就像抱人的动作，手臂要放松，肩部下沉，后背收紧。</li><li>动作轨迹要完整，在顶峰处停顿感受胸部挤压发力。注意核心要收紧。</li><li>8——12做4组，自己调节重量。</li></ul><hr><h4 id="训练后拉伸"><a href="#训练后拉伸" class="headerlink" title="训练后拉伸"></a>训练后拉伸</h4><ul><li>双手交叉抱头，挺胸，一个人从后面环抱住两肘，将胸肌彻底拉开。</li></ul><hr><h3 id="全套胸肌训练动作"><a href="#全套胸肌训练动作" class="headerlink" title="全套胸肌训练动作"></a>全套胸肌训练动作</h3><p>可以根据训记app上的训练计划制定自己的训练计划，核心动作如下：</p><ul><li><p><strong>热身，全胸，俯卧撑</strong></p><p>俯卧撑其实能说不少，可以作为<strong>热身或者新手的进阶运动</strong>。俯卧撑同时兼备了简单、全面、不受场地限制等等优点，是每次训练胸部前热身必备的一个训练动作。</p></li><li><p><strong>中胸</strong></p><p>中胸的训练安排可以是以下三个：</p><ol><li><strong>杠铃卧推</strong></li><li><strong>哑铃卧推</strong></li><li><strong>器械推胸</strong></li></ol><p>有必要解释一下为什么需要器械推胸。<strong>器械推胸</strong>是一个固定器械轨道的动作，固定器械有一个非常大的好处就是：<strong>安全</strong>。当我们前面几组训练比较刻苦的时候，到后面的动作势必会<strong>力量变弱，控制力降低，</strong>此时如果我们再使用自由重量来训练，那么容易受伤和其他肌肉代偿。</p><p>结合固定器械安全和轨道单一的特点，我们可以使用器械推胸来增强<strong>我们的肌耐力</strong>。很多人只重视自己能推多重（最大rm），但从来没怎么在乎自己是不是能够多举几次。此时，我们需要的就是肌耐力。</p><p><strong>肌耐力对增肌是有不少好处的，</strong>因为肌耐力可以在你重量上不去的时候，同样能提供你更大的训练强度，迫使肌肉发生小规模炎症而增肌。</p><p>接下来我们解析一个每个动作。</p><ul><li><p><strong>杠铃卧推</strong></p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/lucky-carp/picx-images-hosting@master/20230510/v2-70a3f57dee571378ac1e27eaba807d24_b.2gzqmvzjvoa0.webp"                                     ></p><p>训练要点：</p><ol><li>躺好，沉肩夹背。双腿放在地面上，踩实。腰部<strong>微起桥</strong>，可以插入一个小拳头 的高度。</li><li>自然、缓慢下放杠铃，<strong>下放位置应该是尽量贴近胸部，最后靠到乳头的位置</strong>，<strong>而不是肩的位置</strong>。推起时快速而具有爆发力。</li><li>全程保持挺胸，沉肩夹背。</li><li><strong>卧推的轨迹因人而异，但轨迹并不是垂直于地面的，而是会有一定的夹角。</strong>一般会往头部偏移。</li></ol></li></ul></li><li><p><strong>上胸</strong></p><p>训练上胸最好的动作是<strong>哑铃上斜卧推</strong>，不用杠铃的原因其实是因为我一般会做平板杠铃卧推，此时换一个哑铃的做上斜，会比较方便，同时<strong>增加训练动作总类，保持训练乐趣</strong>。如果你喜欢，你可以一直保持杠铃卧推也没问题。</p><ul><li><p><strong>哑铃上斜卧推</strong></p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/lucky-carp/picx-images-hosting@master/20230510/v2-86e97385a25a0bea237ef2ad2ff79b5c_b.64ckli6e7w00.webp"                                     ></p><p>动作要领</p><ol><li>调整凳子斜度，15-45度，都可以，<strong>不同的角度刺激部位不同</strong>。</li><li>拿起适合重量的两个哑铃，放在大腿的膝盖前端，不要顶着膝盖。利用大腿，顺势将哑铃顶起，双手开始抓握，推至最高处。然后调整<strong>你的肩胛骨和肩膀。</strong></li><li>自然下放到<strong>肩膀的位置，推起</strong>。上斜卧推不再是下放到乳头附近。</li><li>选择可以推起8-12下重量的哑铃，做4-5组的训练进行刺激肌肉。<strong>这种重量和组数能够很好的进行肌肥大训练</strong>。</li></ol></li></ul></li><li><p><strong>下胸</strong></p><p>下胸部的训练有几个比较常见的动作</p><ol><li>双杠臂屈伸</li><li>下斜各种推</li></ol><p>下斜各种推其实并不是很适合拿来训练，尤其是新手，其原因有几个：</p><ul><li>下斜会导致大脑充血，新手容易在发力是眩晕，拿不稳重物</li><li>下斜发力模式比较奇怪，部分新手对于这种姿势发力表示很困难。</li></ul><p>因此，我们可以使用<strong>双杠臂屈伸</strong>去锻炼我们的胸部下维。我们能力不足时，可以用辅助器。</p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/lucky-carp/picx-images-hosting@master/20230510/v2-5b4b30f848761d99fc46b7022f618ca8_b.1hi9n6srj2lc.webp"                                     ></p></li></ul><hr><h3 id="关于力量的选择和突破"><a href="#关于力量的选择和突破" class="headerlink" title="关于力量的选择和突破"></a>关于力量的选择和突破</h3><p>我们可以简单的将肌肉的两种指标分为：<strong>肌肥大和肌力量</strong>。</p><p>对于一般人而言，想要好看的胸部，我们更需要的是<strong>肌肥大。就是所谓的增肌。</strong></p><p><strong>【影响肌肥大的因素】</strong></p><p>从训练角度而言，次数、重量、休息时间、频率等都是客观因素，而主观因素是：训练强度。</p><p>剥去长篇大论，肌肥大的基本原理只有无非短短两条<strong>比较重要</strong>：</p><ol><li>神经系统需要超过你日常生活的负荷，使其不能适应外界的压力条件，从而使得内分泌系统转向合成肌肉骨骼的代谢方向，以适应这种外界的负荷。</li><li>受到负荷的肌肉产生微损伤，肌肉内产生无氧代谢的废物，以及出现急性微小炎症反应，促进肌肉超量恢复。</li></ol><p>理想是美好的，现实是残忍的。</p><p>但很多时候，我们的身体从主观上来说很容易对大负荷产生巨大的抗拒，因此人们想出了很多办法去克服，即主观判断容易导致偏差，所以人们更倾向于用改变客观的条件去提升我们的训练强度，也就是提升我们的外界负荷。</p><p><strong>【选择合适的力量】</strong></p><ul><li>1-5RM：肌力量提升</li><li>8-12RM：肌肥大</li><li>15RM 以上，是肌耐力</li></ul><p>因此，我们的胸部训练如果是以肌肥大为主，那么我推荐的是，8-12 RM。</p><p>但我们不能仅仅通过8-12 RM 就能达到增肌的效果，因为当你肌力量和肌耐力得不到很好提升的时候，也就意味着，<strong>你不能拿更大的重量做 8-12RM</strong>，那你的肌肉肥大的限度是打折扣的。</p><p>可以这么理解：<strong>拿越大的重量做 8-12 RM，你的肌肉就会越大，越好看</strong>。</p><hr><p>以上就是本文对胸肌训练的记录和分析，健身小白只是用来训练自己的，大家也可以给我些别的训练建议。文章内容主要参考了方正教练的<a class="link"   href="https://zhuanlan.zhihu.com/p/174929791" >新手胸肌训练指南<i class="fas fa-external-link-alt"></i></a>。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;私教课的第二节，今天练胸！&lt;/p&gt;
&lt;p&gt;本篇blog将根据这次私教课的内容进行扩充延申，对胸肌训练进行细节讲述，作为一枚健身小白，纯属记录。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;先从胸肌的组成结构出发&quot;&gt;&lt;a href=&quot;#先从胸肌的组成结构出发&quot; class=&quot;heade</summary>
      
    
    
    
    <category term="Life" scheme="http://example.com/categories/Life/"/>
    
    
    <category term="Fitness" scheme="http://example.com/tags/Fitness/"/>
    
  </entry>
  
  <entry>
    <title>Food Sharing——天宝兄弟罗氏虾</title>
    <link href="http://example.com/roche-shrimp/"/>
    <id>http://example.com/roche-shrimp/</id>
    <published>2023-05-09T10:19:36.000Z</published>
    <updated>2023-05-10T10:23:24.551Z</updated>
    
    <content type="html"><![CDATA[<p>天宝兄弟的罗氏虾在长沙这个遍地小龙虾的地盘竟然能做到一绝，让我跟鹿崽流连忘返，必有它的绝佳秘方，但是一盘一斤的罗氏虾能卖到228，活虾也才80一斤，为了减少消费，满足鹿崽的胃，这菜我必须学会！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;天宝兄弟的罗氏虾在长沙这个遍地小龙虾的地盘竟然能做到一绝，让我跟鹿崽流连忘返，必有它的绝佳秘方，但是一盘一斤的罗氏虾能卖到228，活虾也才80一斤，为了减少消费，满足鹿崽的胃，这菜我必须学会！&lt;/p&gt;
</summary>
      
    
    
    
    <category term="Life" scheme="http://example.com/categories/Life/"/>
    
    
    <category term="Cooking" scheme="http://example.com/tags/Cooking/"/>
    
  </entry>
  
  <entry>
    <title>Keep——A simple and elegant theme for Hexo.</title>
    <link href="http://example.com/keep-theme/"/>
    <id>http://example.com/keep-theme/</id>
    <published>2023-05-09T07:51:23.000Z</published>
    <updated>2023-05-10T10:19:15.557Z</updated>
    
    <content type="html"><![CDATA[<p><a class="link"   href="https://hexo.io/themes/" >Themes | Hexo<i class="fas fa-external-link-alt"></i></a> 提供了很多网站主题，Keep主题是我目前最喜欢，也是我认为最适合新手的一个主题（因为它的文档真的很详细！）</p><p>本篇博客主要记录了我使用keep主题时的配置，hexo的主题自由度很高，大家也可以根据个人喜好在此基础上构建漂亮的blog。</p><blockquote><p>本篇涉及到的几个工具：</p><ul><li><strong>Hexo</strong>：Hexo是一个基于Node.js的静态博客框架，可以使用Markdown格式的文本快速创建个人博客并轻松发布到网络。Hexo提供了许多有用的功能，例如多语言支持、主题和插件、自动化部署等，可以帮助用户建立一个美观、高效、易用的个人博客网站。同时，由于Hexo生成的是静态页面，因此具有快速、安全和稳定的特点。详见<a class="link"   href="https://hexo.io/zh-cn/index.html" >Hexo官网<i class="fas fa-external-link-alt"></i></a>。</li><li><strong>Keep theme</strong>：一个hexo网站主题，详见<a class="link"   href="https://keep-docs.xpoet.cn/" >keep主题使用指南<i class="fas fa-external-link-alt"></i></a>，特点有：<ul><li>极致体验（Keep 主题拥有更加合理的源代码组织形式，给你带来极致的页面加载体验。）</li><li>简约至上（不管后续如何变化，Keep 主题始终围绕「 简约、轻快 」来维护和升级。）</li><li>化繁为简（只需简单配置就能有强大功能，让我们专注写作内容，找回写博客的初衷。）</li></ul></li><li><strong>PicX</strong>：PicX是一款图床工具，也是一个开源的图片存储服务，可以轻松地将图片上传到云端，同时也可以方便地分享和管理图片。PicX支持多种上传方式，例如直接拖拽上传、剪贴板上传、API上传等，还可以自定义上传空间、图片大小、缩略图等参数。使用PicX可以避免自己的服务器上存储过多的图片，使网站加载速度更快，同时也可以享受到云服务带来的便利和安全性。详见<a class="link"   href="https://picx.xpoet.cn/" >PicX官网<i class="fas fa-external-link-alt"></i></a>。</li><li><strong>valine</strong>：Valine是一个基于LeanCloud的无后端评论系统，它是一款轻量级、快速、简单而强大的评论系统，支持一键集成到各种静态博客或网站中。Valine整合了LeanCloud的存储和访问速度快、具有良好的安全性能的优点，支持多语言、支持评论表情、评论邮件提醒、验证码等功能。同时，Valine采用了前端渲染和AJAX异步请求的方式，使得对服务器的压力较小，并且具有良好的扩展性能。Valine现已成为许多使用静态博客框架的开发者的常用工具。详见<a class="link"   href="https://valine.js.org/" >valine官网<i class="fas fa-external-link-alt"></i></a>。</li></ul></blockquote><h2 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h2><p>在使用 Keep 主题之前，如果你对 Hexo 搭建个人博客没有任何经验，建议你可以先简要阅读 <code>「 Easy Hexo 团队 」</code>撰写的 <a class="link"   href="https://easyhexo.com/" >Hexo 教程<i class="fas fa-external-link-alt"></i></a>，能帮助你快速入门 Hexo。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ul><li><p>如果你在使用 Hexo 5.0 或更高版本，最简单的安装方式是通过 NPM <strong>（推荐）</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd hexo-site</span><br><span class="line">npm install hexo-theme-keep</span><br></pre></td></tr></table></figure></li><li><p>或者使用 Git 克隆整个仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd hexo-site</span><br><span class="line">git clone https://github.com/XPoet/hexo-theme-keep themes/keep</span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>Keep 主题安装完成后，在 Hexo 配置文件（站点配置文件） <code>_config.yml</code> 中将 <code>theme</code> 设置为 <code>keep</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: keep</span><br></pre></td></tr></table></figure><blockquote><p>注意：使用 Keep 主题必须确保你的 Node.js 版本 &gt;&#x3D; 14.0，当你的 Hexo 项目运行时报错或发出警告，请注意升级你的 Node.js 版本。</p></blockquote><hr><h3 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h3><p>Keep 主题不定期发布新版本，你可以通过如下命令更新。</p><ul><li><p>通过 NPM 安装最新版本 <strong>（推荐）</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd hexo-site</span><br><span class="line">npm install hexo-theme-keep@latest</span><br></pre></td></tr></table></figure></li><li><p>通过 Git 更新到最新的 master 分支</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd themes/keep</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="Keep-主题快速启动模板"><a href="#Keep-主题快速启动模板" class="headerlink" title="Keep 主题快速启动模板"></a>Keep 主题快速启动模板</h2><p>Keep 主题官方提供了基于 Hexo 博客框架的快速启动模板，启动模板中的 Hexo 配置文件 <code>_config.yml</code> 和主题配置文件 <code>source/_data/keep.yml</code> 已预设和启用一些比较实用的基础配置项。</p><p>我们可以直接拿来快速创建一个 Hexo 博客项目，无需其他操作，开箱即用，然后在此模板基础上配置出属于自己的独一无二的 Keep 主题博客。<strong>（非常适合新手同学）</strong></p><h3 id="下载模板"><a href="#下载模板" class="headerlink" title="下载模板"></a>下载模板</h3><p>使用 Git 克隆：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/theme-keep/hexo-theme-keep-starter</span><br></pre></td></tr></table></figure><p>直接下载：</p><p><a class="link"   href="https://github.com/theme-keep/hexo-theme-keep-starter/archive/refs/heads/main.zip" >点击这里下载 &gt;&gt; Keep 主题快速启动模板<i class="fas fa-external-link-alt"></i></a></p><hr><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><p>「 Keep 主题快速启动模板 」下载完成之后，需要安装项目依赖才能成功运行起来。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd hexo-theme-keep-starter</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><hr><h3 id="运行项目"><a href="#运行项目" class="headerlink" title="运行项目"></a>运行项目</h3><p>项目依赖安装成功之后，使用如下命令即可运行项目，随即在浏览器上看到 Keep 主题的 Hexo 博客。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run server</span><br></pre></td></tr></table></figure><hr><h3 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h3><p>至此，我们可以直接在此模板上自由配置 Keep 主题，最后编译生成静态文件 -&gt; 部署发布。</p><p><strong>注意：为确保你的主题配置项完全生效，请在 <code>source/_data/keep.yml</code> 路径下进行主题配置。</strong></p><blockquote><p>请勿随意移动 <code>keep.yml</code> 文件的路径，确保 <code>keep.yml</code> 在 <code>source/_data/</code> 路径下。<br>请勿随意更改 <code>keep.yml</code> 文件中的配置项字段名称，填写配置项之后，确保缩进是否正确。</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编译生成静态文件</span></span><br><span class="line">npm run build</span><br><span class="line"><span class="comment"># 部署</span></span><br><span class="line">npm run deploy</span><br></pre></td></tr></table></figure><hr><p>我们现在已经可以使用keep主题作为我们网站的样式了，接下来对详细配置项进行说明，从而构建更加符合个人审美的网站，毕竟我们现在做的个人博客也是为了让自己开心嘛！</p><hr><h2 id="keep-theme配置项"><a href="#keep-theme配置项" class="headerlink" title="keep theme配置项"></a>keep theme配置项</h2><h3 id="base-info"><a href="#base-info" class="headerlink" title="base_info"></a>base_info</h3><p><code>base_info</code> 配置项用于设置你的博客站点基本信息，请正确填写。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">base_info:</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">Keep</span> <span class="string">Theme</span></span><br><span class="line">  <span class="attr">author:</span> <span class="string">Keep</span> <span class="string">Team</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">https://keep.xpoet.cn/</span></span><br></pre></td></tr></table></figure><ul><li><p><strong>title</strong></p><p><code>title</code> 用于设置博客站点的<strong>标题</strong>，将显示在网站的头部，如下图。</p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/lucky-carp/picx-images-hosting@master/20230510/image-20230510101516923.677gt9w70yw0.webp"                                     ></p></li><li><p><strong>author</strong></p><p><code>author</code> 用于设置博客站点的<strong>作者昵称</strong>，显示在<strong>网站底部</strong>、<strong>文章内容页</strong>和<strong>版权信息</strong>，如下图。</p><ul><li><p>网站底部</p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/lucky-carp/picx-images-hosting@master/20230510/image-20230510101617772.45b9jhb9pnc0.webp"                                     ></p></li><li><p>文章内容页</p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/lucky-carp/picx-images-hosting@master/20230510/image-20230510101643540.4jgwxh1u45m0.webp"                                     ></p></li><li><p>版本信息</p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/lucky-carp/picx-images-hosting@master/20230510/image-20230510101710701.74vr7l2etuw0.webp"                                     ></p></li></ul></li></ul><hr><h3 id="style"><a href="#style" class="headerlink" title="style"></a>style</h3><p><code>style</code> 配置项用于自定义配置 Keep 主题的样式，通过这里你可以配置出属于你自己独一无二的 Keep 主题博客站点。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">style:</span></span><br><span class="line">  <span class="attr">primary_color:</span> <span class="string">&quot;#0066cc&quot;</span></span><br><span class="line">  <span class="attr">logo:</span> <span class="string">/images/logo.svg</span></span><br><span class="line">  <span class="attr">favicon:</span> <span class="string">/images/logo.svg</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">/images/avatar.svg</span></span><br><span class="line">  <span class="attr">font_size:</span></span><br><span class="line">  <span class="attr">font_family:</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">hover:</span></span><br><span class="line">    <span class="attr">shadow:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">scale:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">first_screen:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">header_transparent:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">background_img:</span> <span class="string">/images/bg.svg</span></span><br><span class="line">    <span class="attr">description:</span> <span class="string">Keep</span> <span class="string">writing</span> <span class="string">and</span> <span class="string">Keep</span> <span class="string">loving.</span></span><br><span class="line">    <span class="attr">font_color:</span></span><br><span class="line">    <span class="attr">hitokoto:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">scroll:</span></span><br><span class="line">    <span class="attr">progress_bar:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">percent:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><ul><li><p><strong>primary_color</strong></p><p><code>primary_color</code> 用于设置博客站点主题色，支持 <strong>十六进制</strong>、<strong>rgb</strong> 和 <strong>rgba</strong> 颜色格式。<br>例如：<code>#0066cc</code>、<code>rgb(0, 102, 204)</code> 和 <code>rgba(0, 102, 204, 0.8)</code>、。</p><p>获取配色推荐：</p><ul><li><a class="link"   href="https://flatuicolors.com/" >Flat UI Colors<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://www.bootcss.com/p/websafecolors" >Web 安全色<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://color.adobe.com/zh/create/color-wheel" >Adobe Color CC<i class="fas fa-external-link-alt"></i></a></li></ul></li><li><p><strong>logo</strong></p><p><code>logo</code> 用于设置博客站点头部 LOGO，如下图。</p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/lucky-carp/picx-images-hosting@master/20230510/image-20230510101839373.7hl0tejlk880.webp"                                     ></p><p><strong>关于图片的设置：</strong></p><p>你可以使用 <strong>本地图片</strong>（即存储 <code>keep/source/images/</code> 路径下的图片）或 <strong>图片外链 URL</strong>（适用于使用 NPM 安装的 Keep主题）。最开始我使用本地图片上传的方式，图片加载实在太慢了，于是尝试使用了PicX图床的方式。</p><ul><li><p>本地图片</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">logo:</span> <span class="string">/images/logo.svg</span></span><br></pre></td></tr></table></figure></li><li><p>图片外链（推荐）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">logo:</span> <span class="string">https://cdn.staticaly.com/gh/XPoet/image-hosting@master/hexo-theme-keep/logo.7ihwqpf2atg0.svg</span></span><br></pre></td></tr></table></figure><blockquote><p>图床推荐</p><p>大家可以使用免费的图床工具 <strong>PicX</strong> 来存储自己的图片并生成图片外链。<br>PicX: <a class="link"   href="https://github.com/XPoet/picx" >https://github.com/XPoet/picx<i class="fas fa-external-link-alt"></i></a></p></blockquote></li><li><p>往下的 <code>favicon</code>、<code>avatar</code>、<code>favicon</code>、<code>first_screen.background_img</code> 等配置项的图片设置均使用以上方式。</p></li></ul></li><li><p><strong>favicon</strong></p><p> 用于设置博客站点 favicon 图标。</p></li><li><p><strong>avatar</strong> </p><p>用于设置博客站点<strong>作者头像</strong>，将显示在文章内容页。</p></li><li><p><strong>font_size</strong></p><p><code>font_size</code> 设置博客站点的初始<strong>字体大小</strong>，单位必须为 <strong><code>px</code></strong> 。该配置项可以不填，如果不填将使用 Keep 主题内置的初始字体大小 <code>15.2px</code> 。</p></li><li><p><strong>font_family</strong></p><p><code>font_family</code> 设置博客站点的<strong>字体样式</strong>，该配置项可以不填，如果不填将使用 Keep 主题内置的字体样式。</p><blockquote><p><code>font_family</code> 同 CSS 设置 <code>font-family</code> 规则一致</p></blockquote>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置：楷体</span></span><br><span class="line"><span class="attr">font_family:</span> <span class="string">STKaiti</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置：宋体，黑体</span></span><br><span class="line"><span class="attr">font_family:</span> <span class="string">STSong,</span> <span class="string">STHeiti</span></span><br></pre></td></tr></table></figure></li><li><p><strong>hover</strong></p><p><code>hover</code> 用于设置<strong>鼠标悬浮时的样式</strong>（例如悬浮在主页文章模块、TOC 目录模块、按钮等），可分别开启 <code>shadow</code> 和 <code>scale</code> 效果。</p></li><li><p><strong>first_screen</strong></p><p><code>first_screen</code> 是 Keep 主题 <code>v3.0.0</code> 新增的<strong>首屏模块</strong>，开启后将显示在博客站点首页的第一视野（故称<strong>首屏</strong>）</p></li><li><p><strong>header_transparent</strong></p><p><code>header_transparent</code> 用于在首屏模块开启状态下<strong>设置头部是否透明</strong>，可选值：<code>true</code> 或 <code>false</code>。</p></li><li><p><strong>background_img</strong></p><p><code>background_img</code> 设置首屏背景图片，可使用 <strong>本地图片</strong> 或 <strong>图片外链 URL</strong>。</p><blockquote><p>这里建议大家的高清背景图片用 <a class="link"   href="https://tinypng.com/" >TinyPNG<i class="fas fa-external-link-alt"></i></a> 压缩一下后再使用，可有效提高页面加载速度。</p></blockquote></li><li><p><strong>description</strong></p><p><code>description</code> 设置首屏描述，支持设置两行，换行符 **<code>||</code>**。</p></li><li><p><strong>font_color</strong></p><p><code>font_color</code> 设置首屏描述的字体颜色，可以为空，不填则使用 Keep 主题内置颜色。</p></li><li><p><strong>hitokoto</strong></p><p><code>hitokoto</code> 是 Keep 主题 <code>v3.4.6</code>新增的首屏描述<strong>一言</strong>功能，可选值：<code>true</code> 或 <code>false</code>。</p><p>开启之后，在<strong>每次进入博客站点</strong>或<strong>刷新页面</strong>都会自动呈现出不一样的首屏描述。</p></li><li><p><strong>scroll</strong></p><p><code>scroll</code> 设置页面滚动时的样式。</p></li><li><p><strong>progress_bar</strong></p><p><code>progress_bar</code> 页面滚动时在网站<strong>顶部</strong>显示滚动<strong>进度条</strong>，可选值：<code>true</code> 或 <code>false</code>。</p></li><li><p><strong>percent</strong></p><p><code>percent</code> 页面滚动时在<strong>右下角</strong>工具栏显示滚动<strong>百分比</strong>，可选值：<code>true</code> 或 <code>false</code>。</p></li></ul><hr><h3 id="menu"><a href="#menu" class="headerlink" title="menu"></a>menu</h3><p><code>menu</code> 用于配置博客站点的<strong>头部导航菜单</strong>，如需新增导航菜单，按配置文件里面的格式填写即可。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">Home:</span> <span class="string">/</span>                         <span class="comment"># 首页</span></span><br><span class="line">  <span class="attr">Archives:</span> <span class="string">/archives</span>             <span class="comment"># 归档</span></span><br><span class="line">  <span class="comment"># Tags: /tags                   # 标签</span></span><br><span class="line">  <span class="comment"># Categories: /categories       # 分类</span></span><br><span class="line">  <span class="comment"># Links: /links                 # 链接</span></span><br><span class="line">  <span class="comment"># About: /about                 # 关于</span></span><br><span class="line">  <span class="comment"># ...</span></span><br></pre></td></tr></table></figure><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/lucky-carp/picx-images-hosting@master/20230510/image-20230510113901444.6e27uayqgk00.webp"                                     ></p><p><code>menu</code> 导航菜单可以配置两个跳转方式：</p><ol><li>跳转博客到内部页面。</li><li>跳转到外部第三方网站。</li></ol><p><strong>跳转内部页面</strong></p><ul><li><p>Hexo 项目在初始（默认）状态下并没有 Categories（分类）、Tags（标签）、About（关于）、Links（友链）等，这些都需要自己<strong>先手动创建，再配置使用</strong>，否则无效。</p></li><li><p>我们以创建「 About（关于）」页面为例：</p><ol><li><p>在 Hexo 项目根目录下执行命令 <code>hexo new page about</code> ，即可在 <code>source</code> 目录下生成 about 文件夹。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page about</span><br></pre></td></tr></table></figure></li><li><p>在 Keep 主题配置文件 <code>_config.yml</code> 的 <code>menu</code> 配置项下添加 **<code>About: /about</code>**。</p> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">Home:</span> <span class="string">/</span></span><br><span class="line">  <span class="attr">Archives:</span> <span class="string">/archives</span></span><br><span class="line">  <span class="comment"># Categories: /categories</span></span><br><span class="line">  <span class="comment"># Tags: /tags</span></span><br><span class="line">  <span class="comment"># Links: /links</span></span><br><span class="line">  <span class="attr">About:</span> <span class="string">/about</span></span><br></pre></td></tr></table></figure><p> 3.打开 Hexo 项目下 <code>/source/about/index.md</code> 文件，填写 Adout 页面的内容。 支持 Markdown 和 HTML 格式；</p><p> 参考如下：</p> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">about</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2020-03-19 14:59:53</span></span><br><span class="line"><span class="attr">comment:</span> <span class="literal">true</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="comment">## About me</span></span><br><span class="line"></span><br><span class="line"><span class="string">XPoet「</span> <span class="string">Keep</span> <span class="string">core</span> <span class="string">developer</span> <span class="string">」...</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="string">...</span></span><br></pre></td></tr></table></figure><blockquote><p>提示</p><p><code>comment: true</code> 表示该页面<strong>开启评论功能</strong>。（默认不开启评论）</p><p>特别注意</p><p>创建页面时自动生成的 <code>title</code> 属性不要修改！不要删除！<br>例如：<code>title: about</code> 不能修改！不能删除！</p></blockquote></li></ol></li></ul><p><strong>跳转外部网站</strong></p><ul><li><p>如果要实现在导航栏点击菜单时跳转到第三方网站，只需把配置项的值填写为第三方网站的 URL 即可。 例如：在导航栏配置跳转到 Baidu 网站的菜单。</p>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">Baidu:</span> <span class="string">https://www.baidu.com/</span></span><br><span class="line">  <span class="string">百度:</span> <span class="string">https://www.baidu.com/</span></span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="social-contact"><a href="#social-contact" class="headerlink" title="social_contact"></a>social_contact</h3><p><code>social_contact</code> 在首屏里面配置第三方社交链接。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">social_contact:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">links:</span></span><br><span class="line">    <span class="attr">github:</span>          <span class="comment"># GitHub</span></span><br><span class="line">    <span class="attr">weixin:</span>          <span class="comment"># WeChat</span></span><br><span class="line">    <span class="attr">qq:</span>              <span class="comment"># QQ</span></span><br><span class="line">    <span class="attr">weibo:</span>           <span class="comment"># WeiBo</span></span><br><span class="line">    <span class="attr">zhihu:</span>           <span class="comment"># ZhiHu</span></span><br><span class="line">    <span class="attr">twitter:</span>         <span class="comment"># Twitter</span></span><br><span class="line">    <span class="attr">facebook:</span>        <span class="comment"># Facebook</span></span><br><span class="line">    <span class="attr">email:</span>           <span class="comment"># Email</span></span><br></pre></td></tr></table></figure><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/lucky-carp/picx-images-hosting@master/20230510/image-20230510115310335.tlsh30o1mg0.webp"                                     ></p><ul><li><p><strong>enable</strong>：<code>enable</code> 设置是否开启显示第三方社交链接，可选值：<code>true</code> 或 <code>false</code>。</p></li><li><p><strong>links</strong>：在 <code>links</code> 下方的第三方社交平台配置项填写自己的 URL。</p><ul><li><p><strong>点击跳转外部链接</strong></p><p>当我们在 <code>links</code> 的配置项里填写的是 URL 时，点击对应图标时会直接跳转到外部 URL。</p><p>配置示例：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">github:</span> <span class="string">https://github.com/lucky-carp</span></span><br></pre></td></tr></table></figure></li><li><p><strong>点击悬浮打开图片</strong></p><p>当我们需要在点击图标时悬浮打开图片，例如点击<strong>微信</strong>图标，悬浮打开微信<strong>二维码</strong>时，那么需要给 URL 加上前缀 **<code>img | </code>**。</p><blockquote><p>此处的 URL 必须是图片外链</p></blockquote><p>配置示例：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">weixin:</span> <span class="string">img</span> <span class="string">|</span> <span class="string">https://x.com/images/wechat.png</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>自定义配置</strong></p><p>Keep 主题内置 Font Awesome <code>v6.2.0</code> 免费版图标，基本已覆盖我们所需的全部图标。</p><p>如果要自定义<strong>更改图标</strong>或<strong>添加其他第三方链接</strong>，例如：添加 Instagram</p><ol><li><p>在 <a class="link"   href="https://fontawesome.com/icons?d=gallery&s=solid&m=free" >Font Awesome<i class="fas fa-external-link-alt"></i></a> 搜索 Instagram 图标。</p></li><li><p>填写图标名（如上图），添加到主题配置文件 <code>_config.yml</code> 的 <code>social_contact.links</code> 配置项里面。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">social_contact:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">links:</span></span><br><span class="line">    <span class="attr">instagram:</span> <span class="string">https://www.instagram.com/xxxxxxxx</span></span><br></pre></td></tr></table></figure></li></ol></li></ul><hr><h3 id="home-article"><a href="#home-article" class="headerlink" title="home_article"></a>home_article</h3><p><code>home_article</code> 该配置项用于设置首页文章块底部的标签和分类信息显示。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">home_article:</span></span><br><span class="line">  <span class="attr">category:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">tag:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><ul><li><p><strong>category</strong>：</p><ul><li><code>enable</code> 是否开启显示文章分类，可选值：<code>true</code> 或 <code>false</code>。</li><li><code>limit</code> 限制显示文章分类个数，默认 3 个。</li></ul></li><li><p><strong>tag</strong>：</p><ul><li><code>nable</code> 是否开启显示文章标签，可选值：<code>true</code> 或 <code>false</code>。</li><li><code>limit</code> 限制显示文章标签个数，默认 5 个。</li></ul></li><li><p>开启效果展示：</p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/lucky-carp/picx-images-hosting@master/20230510/image-20230510141804065.5g8m137ykgk0.webp"                                     ></p></li></ul><hr><h3 id="post"><a href="#post" class="headerlink" title="post"></a>post</h3><p><code>post</code> 配置项用于设置文章内容页的<strong>文章字数统计</strong>、<strong>阅读时长</strong>、<strong>作者标识</strong>和<strong>图片排列位置</strong> 。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">post:</span></span><br><span class="line">  <span class="attr">author_label:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span>  <span class="comment"># Option values: true | false</span></span><br><span class="line">    <span class="attr">auto:</span> <span class="literal">true</span>    <span class="comment"># Option values: true | false</span></span><br><span class="line">    <span class="attr">custom_label_list:</span> [<span class="string">&quot;Trainee&quot;</span>, <span class="string">&quot;Engineer&quot;</span>, <span class="string">&quot;Architect&quot;</span>]</span><br><span class="line"></span><br><span class="line">  <span class="attr">word_count:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span>       <span class="comment"># Option values: true | false</span></span><br><span class="line">    <span class="attr">wordcount:</span> <span class="literal">false</span>    <span class="comment"># Word count, one article. Option values: true | false</span></span><br><span class="line">    <span class="attr">min2read:</span> <span class="literal">false</span>     <span class="comment"># Time to read, one article. Option values: true | false</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">img_align:</span> <span class="string">left</span>  <span class="comment"># Option values: left | center</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">copyright_info:</span> <span class="literal">false</span>  <span class="comment"># Option values: true | false</span></span><br></pre></td></tr></table></figure><ul><li><p><strong>author_label</strong>：<code>author_label</code> 设置文章内容页的<strong>作者标识（称号）</strong>，目前有两种方案：</p><ol><li><p><code>auto</code> 自动生成 <code>Lv1</code>、<code>Lv2</code>、<code>Lv3</code> …… 判断依据为文章数量，Lv 级别越高，增长越慢。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">author_label:</span></span><br><span class="line"> <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"> <span class="attr">auto:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li><li><p><code>custom_label_list</code> 自定义标识列表，数组项可以 <strong>一个</strong> 或 <strong>多个</strong>，匹配的依据是按文章数量。本站采用自定义方式，定义了四个级别：[“Junior”, “Intermediate”, “Senior”,”Architect”]代表初级、中级、高级开发者和架构师。</p><p>效果展示：</p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/lucky-carp/picx-images-hosting@master/20230510/image-20230510142432520.30t0h0khlxc0.webp"                                     ></p></li></ol></li><li><p><strong>word_count</strong>：<code>word_count</code> 用于实现<strong>文章字数统计</strong>和<strong>计算阅读时长</strong>，使用前需在 Hexo 项目根目录下安装第三方依赖 <strong>hexo-wordcount</strong>。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount</span><br></pre></td></tr></table></figure><ul><li><p>enable：<code>enable</code> 是否启用文章字数统计和文章阅读时长统计功能，可选值：<code>true</code> | <code>false</code> 。</p></li><li><p>wordcount：<code>wordcount</code> 是否开启文章字数统计，可选值：<code>true</code> 或 <code>false</code>。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">word_count:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">wordcount:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>min2read</strong>：<code>min2read</code> 是否开启文章阅读时长，可选值：<code>true</code> 或 <code>false</code>。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">word_count:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">min2read:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>  word_count和min2read的效果展示：</p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/lucky-carp/picx-images-hosting@master/20230510/image-20230510142640280.5gogq70dwno0.webp"                                     ></p></li><li><p><strong>img_align</strong>：<code>img_align</code> 设置文章内容页的图片排列位置，默认 <code>left</code>，可选：<code>left</code>（靠左）、<code>center</code>（居中）。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">img_align:</span> <span class="string">left</span>  <span class="comment"># Option values: left | center</span></span><br></pre></td></tr></table></figure></li><li><p><strong>copyright_info</strong>：<code>copyright_info</code> 用于开启文章内容页的<strong>文章版权信息</strong>，可选值：<code>true</code> 或 <code>false</code>。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">copyright_info:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>效果展示：</p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/lucky-carp/picx-images-hosting@master/20230510/image-20230510143013595.3ccfkv00ako0.webp"                                     ></p></li></ul><hr><h3 id="code-block"><a href="#code-block" class="headerlink" title="code_block"></a>code_block</h3><p><code>code_block</code> 用于开启代码块工具，包含<strong>代码语言</strong>、<strong>代码复制</strong>、<strong>代码块折叠</strong>、设置代码高亮主题等。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">code_block:</span></span><br><span class="line">  <span class="attr">tools:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">style:</span> <span class="string">default</span>   <span class="comment"># Option values: default | mac</span></span><br><span class="line">  <span class="attr">highlight_theme:</span> <span class="string">default</span>   <span class="comment"># Option values: default | obsidian</span></span><br></pre></td></tr></table></figure><ul><li><strong>tools</strong><ul><li>enable：<code>enable</code> 是否开启代码块工具。</li><li>style：<code>style</code> 设置代码块工具样式，可选 <code>default</code> 和 <code>mac</code>。本站当前使用的是default。</li></ul></li><li><strong>highlight_theme</strong><ul><li><code>highlight_theme</code> 设置代码高亮主题，可选 <code>default</code> 和 <code>obsidian</code>。本站当前使用的是default。</li></ul></li></ul><p>效果展示：</p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/lucky-carp/picx-images-hosting@master/20230510/image-20230510143340300.5f4c8v5rsls0.webp"                                     ></p><hr><h3 id="toc"><a href="#toc" class="headerlink" title="toc"></a>toc</h3><p><code>toc</code> 用于设置文章 TOC 目录结构，非常实用的功能，可以快速查看文章目录结构和跳转指定位置，建议开启。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">toc:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">number:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">expand_all:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">init_open:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><ul><li><strong>enable</strong>：<code>enable</code> 是否开启 TOC，可选值：<code>true</code> 或 <code>false</code>。</li><li><strong>number</strong>：<code>number</code> 给 TOC 目录结构自动加上数字编号，可选值：<code>true</code> 或 <code>false</code>。</li><li><strong>expand_all</strong>：<code>expand_all</code> 展开所有目录结构，可选值：<code>true</code> 或 <code>false</code>。<ul><li><code>expand_all: true</code> 自动展开所有的目录结构</li><li><code>expand_all: false</code> 边滚动页面边展开对应的位置的目录</li></ul></li></ul><p>效果展示：</p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/lucky-carp/picx-images-hosting@master/20230510/image-20230510143535338.6df2u3vft800.webp"                      style="zoom: 80%;"                 ><hr><h3 id="website-count"><a href="#website-count" class="headerlink" title="website_count"></a>website_count</h3><p><code>website_count</code> 用于设置网站计数，Keep 主题内置<strong>不蒜子</strong>计数，无需额外配置，直接选择你要开启的计数项即可。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">website_count:</span></span><br><span class="line">  <span class="attr">busuanzi_count:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">site_uv:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">site_pv:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">page_pv:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><ul><li><strong>busuanzi_count</strong><ul><li><code>enable</code> ：是否开启不蒜子计数，可选值：<code>true</code> 或 <code>false</code>。</li><li><code>site_uv</code>：网站访问人数（显示在底部），可选值：<code>true</code> 或 <code>false</code>。</li><li><code>site_pv</code> ：网站总访问量（显示在底部），可选值：<code>true</code> 或 <code>false</code>。</li><li><code>page_pv</code> 文章阅读次数（显示在文章内容页），可选值：<code>true</code> 或 <code>false</code>。</li></ul></li></ul><p>效果展示：</p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/lucky-carp/picx-images-hosting@master/20230510/image-20230510143757586.3t4ic7x2iqy0.webp"                                     ></p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/lucky-carp/picx-images-hosting@master/20230510/image-20230510143812328.2dv3hsjbiqsk.webp"                                     ></p><hr><h3 id="local-search"><a href="#local-search" class="headerlink" title="local_search"></a>local_search</h3><p><code>local_search</code> 用于设置站内搜索功能，非常实用，建议开启。开启后，头部导航栏右侧将出现<strong>搜索按钮</strong>。</p><p>通过输入关键字，可完成对博客站点内所有文章进行搜索匹配。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span>     <span class="comment"># Preload the search data when the page loads</span></span><br></pre></td></tr></table></figure><ul><li><code>enable</code> ：是否开启站内搜索功能，可选值：<code>true</code> 或 <code>false</code>。</li><li><code>preload</code> ：设置是否在使用搜索功能前进行<strong>预加载搜索数据</strong>（建议启用）。</li></ul><p><strong>站内搜索功能配置流程：</strong></p><ol><li><p>在 Hexo 项目根目录下安装插件 <code>hexo-generator-searchdb</code>。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb</span><br></pre></td></tr></table></figure></li><li><p>在 Hexo 配置文件 <code>_config.yml</code> 里添加如下配置项。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.json</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">content:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">striptags</span></span><br></pre></td></tr></table></figure></li><li><p>主题配置文件 <code>_config.yml</code> 的 <code>local_search.enable</code> 配置项的值设为 <code>true</code>。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li></ol><p>效果展示：</p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/lucky-carp/picx-images-hosting@master/20230510/image-20230510144058182.5opy5ok0wtg0.webp"                                     ></p><hr><h3 id="comment"><a href="#comment" class="headerlink" title="comment"></a>comment</h3><p><code>comment</code> 该配置项用于开启和配置 Keep 主题的评论系统。</p><ul><li><p><code>enable</code> ：设置是否开启评论系统，可选值：<code>true</code> 或 <code>false</code>。</p></li><li><p><code>use</code> 配置使用哪一款评论系统，可选值：<code>valine</code> | <code>gitalk</code> | <code>twikoo</code> | <code>waline</code>。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">use:</span> <span class="string">valine</span>  <span class="comment"># values: valine | gitalk | twikoo | waline</span></span><br></pre></td></tr></table></figure></li></ul><p>本站使用的评论系统是valine，无需登录，配置简单。</p><ul><li><p>Valine 是一款基于 LeanCloud 的快速、简洁且高效的无后端评论系统。</p><ul><li><p>详情查看：</p><p><a class="link"   href="https://github.com/xCss/Valine" >https://github.com/xCss/Valine<i class="fas fa-external-link-alt"></i></a></p><p><a class="link"   href="https://valine.js.org/" >https://valine.js.org<i class="fas fa-external-link-alt"></i></a></p></li><li><p><strong>appid</strong></p><p><code>appid</code> 设置 LeanCloud 应用的 <code>App ID</code>。</p><p>参考 <a class="link"   href="https://valine.js.org/quickstart.html" >Valine 官方配置教程<i class="fas fa-external-link-alt"></i></a>，获取 <code>App ID</code>，并填入主题配置项 <code>appid</code> 中。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">appid:</span> <span class="string">ih2nzxxxxxxxxxxxxxxxxxxxxxx</span></span><br></pre></td></tr></table></figure></li><li><p><strong>appkey</strong></p><p><code>appkey</code> 设置 LeanCloud 应用的 <code>App Key</code>。</p><p>参考 <a class="link"   href="https://valine.js.org/quickstart.html" >Valine 官方配置教程<i class="fas fa-external-link-alt"></i></a>，获取 <code>App Key</code>，并填入主题配置项 <code>appkey</code> 中。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">appkey:</span> <span class="string">gdf6xxxxxxxxxxxxxxxxxxxxx</span></span><br></pre></td></tr></table></figure></li><li><p><strong>placeholder</strong></p><p><code>placeholder</code> 可填，评论框的在还没输入内容时的显示的文本信息。</p></li></ul></li></ul><p>效果展示：</p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/lucky-carp/picx-images-hosting@master/20230510/image-20230510144540708.50bjuobr0sw0.webp"                                     ></p><hr><h3 id="rss"><a href="#rss" class="headerlink" title="rss"></a>rss</h3><p><code>rss</code> 该配置项用于开启 RSS 订阅功能。</p><blockquote><p>RSS(Rich Site Summary)订阅是一种信息的同步发布和订阅方式，它是一种自动化的信息更新的方式。RSS订阅提供了一个常规化的格式，用于博客和其他网站的更新内容的发放。使用RSS订阅，用户可以在自己的RSS阅读器中订阅感兴趣的博客、新闻网站、论坛等站点的更新信息，这样就可以在一个地方获取所有网站的更新内容而无需逐个打开网站。RSS订阅的好处是可以节省浏览多个网站时的时间，使人们更好地掌握自己所关注的领域的动态。</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">rss:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>开启流程：</p><ol><li><p>在 Hexo 项目根目录下安装插件 <code>hexo-generator-feed</code>。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed</span><br></pre></td></tr></table></figure></li><li><p>在 Hexo 配置文件 <code>_config.yml</code> 增加如下配置项。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Feed Atom</span></span><br><span class="line"><span class="comment"># npm install hexo-generator-feed</span></span><br><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">20</span></span><br></pre></td></tr></table></figure></li><li><p>在 Keep 主题配置文件 <code>_config.yml</code> 开启 RSS。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">rss:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li><li><p>RSS 订阅功能开启后，将会在<strong>右下角</strong>工具按钮组里面显示<strong>RSS 按钮</strong>。</p></li></ol><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/lucky-carp/picx-images-hosting@master/20230510/image-20230510144918382.sluno66jks0.webp"                                     ></p><hr><h3 id="lazyload"><a href="#lazyload" class="headerlink" title="lazyload"></a>lazyload</h3><p><code>lazyload</code> 该配置项用于开启图片懒加载，可选值：<code>true</code> 或 <code>false</code>。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">lazyload:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span>  <span class="comment"># Option values: true | false</span></span><br></pre></td></tr></table></figure><p>开启后，初始打开页面时<strong>不会一次性去加载所有的图片</strong>，只有当视窗滚动到图片位置才加载对应位置的图片资源。</p><p>当图片过多时，开启图片懒加载功能，能有效提高页面加载速度，建议启用。</p><hr><h3 id="cdn"><a href="#cdn" class="headerlink" title="cdn"></a>cdn</h3><p><code>cdn</code> 用于开启 Keep 主题源码资源（JS 文件、CSS 文件和字体文件）的 CDN 加速功能。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">cdn:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span>       <span class="comment"># Option values: true | false</span></span><br><span class="line">  <span class="attr">provider:</span> <span class="string">jsdelivr</span>  <span class="comment"># Option values: jsdelivr | unpkg</span></span><br></pre></td></tr></table></figure><blockquote><p>CDN 原理</p><p>Keep 主题源码的 CDN 加速原理是使用 jsDelivr 或 UNPKG 来加速托管在 NPM 上的 <a class="link"   href="https://www.npmjs.com/package/hexo-theme-keep" >hexo-theme-keep<i class="fas fa-external-link-alt"></i></a> 包的资源。</p></blockquote><ul><li><p><code>enable</code> :设置是否开启 CDN 加速功能，可选值：<code>true</code> 或 <code>false</code>。</p></li><li><p><code>provider</code> :设置 CDN 加速功能的提供商，可选值：<code>jsdelivr</code> 或 <code>unpkg</code>。</p></li></ul><p><strong>建议启用 CDN 的场景</strong>：如果你的 Keep 主题博客站点部署在国外服务器，例如：<strong>GitHub Pages</strong>、<strong>Vercel</strong> 等，那么<strong>建议</strong>你开启 CDN 加速功能，打开页面会有较快的资源加载速度。</p><p><strong>不建议启用 CDN 的场景</strong>：如果你的 Keep 主题博客站点部署在国内服务器，例如：Gitee Pages、阿里云、腾讯云、百度云等，在国内访问已经拥有较好的资源加载速度，则<strong>不建议</strong>开启 CDN 加速功能。</p><hr><h3 id="pjax"><a href="#pjax" class="headerlink" title="pjax"></a>pjax</h3><p><code>pjax</code> 该配置项用于开启 Keep 主题的 PJAX 功能，带来单页应用的体验，可选值：<code>true</code> 或 <code>false</code>。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pjax:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span>  </span><br></pre></td></tr></table></figure><blockquote><p>PJAX</p><p>PJAX 的工作原理是通过 Ajax 从服务器获取 HTML，并用 Ajax 请求得到 HTML 替换页面上容器的内容，然后使用 pushState 更新浏览器的当前 URL，而无需重新加载页面的布局或任何资源（JS，CSS），从而提供快速，完整页面加载的外观。但实际上它只是 Ajax 和 pushState。</p></blockquote><p>PJAX 启用后，点击链接页面跳转时，网页顶部会出现彩色进度条。</p><p>效果展示：</p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/lucky-carp/picx-images-hosting@master/20230510/image-20230510145300983.3kcmxfdc3q00.webp"                                     ></p><hr><h3 id="footer"><a href="#footer" class="headerlink" title="footer"></a>footer</h3><p><code>footer</code> 该配置项用于设置网站底部的信息展示。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="attr">since:</span> <span class="number">2020</span></span><br><span class="line">  <span class="attr">icp:</span></span><br><span class="line">  <span class="attr">site_deploy:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">provider:</span> <span class="string">github</span> <span class="comment"># github | vercel | netlify | gitee | aliyun | tencent_cloud | upyun</span></span><br><span class="line">    <span class="attr">url:</span></span><br></pre></td></tr></table></figure><ul><li><code>since</code>： 设置网站起始年份，可以为空，不填则自动使用当前年份。</li><li><code>icp</code> 设置网站 ICP 备案编号，可以为空，不填则不显示。</li><li><code>site_deploy</code> 是 <code>v3.6.0</code> 新增功能，用于配置显示你的 Keep 主题静态网站部署提供商。<ul><li><code>enable</code> 是否启用，可选值：<code>true</code> | <code>false</code> 。</li><li><code>provider</code> 配置网站部署提供商，可选值：<code>github</code> | <code>vercel</code> | <code>netlify</code> | <code>gitee</code> | <code>aliyun</code> | <code>tencent_cloud</code> | <code>upyun</code> 。</li><li><code>url</code> 配置网站部署提供商的跳转链接，可以为空。</li></ul></li></ul><hr><p>以上就是使用keep-theme主题的详细介绍，本文主要参考了keep主题的官方使用指南：<a class="link"   href="https://keep-docs.xpoet.cn/%E3%80%82" >https://keep-docs.xpoet.cn/。<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a class=&quot;link&quot;   href=&quot;https://hexo.io/themes/&quot; &gt;Themes | Hexo&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/a&gt; 提供了很多网站主题，Keep主题是我目前最喜欢，也是我认为</summary>
      
    
    
    
    <category term="Technology" scheme="http://example.com/categories/Technology/"/>
    
    
    <category term="Tool" scheme="http://example.com/tags/Tool/"/>
    
  </entry>
  
  <entry>
    <title>Build your first blog with Hexo</title>
    <link href="http://example.com/firstblog/"/>
    <id>http://example.com/firstblog/</id>
    <published>2023-05-08T07:51:32.000Z</published>
    <updated>2023-05-10T06:14:31.059Z</updated>
    
    <content type="html"><![CDATA[<p>2022年之前的blog收录在gitee pages，网站为：<code>https://liyang199802.gitee.io/</code>，仍可访问。但是由于gitee现在对文件中的敏感词汇审查过于严格，导致检查文章中词汇耗费了大量时间，因此，今年开始使用github pages来维护个人blog，使用hexo构建个人网站的方法与使用gitee pages基本一致。</p><p>另一方面，作为一个小白，搭建的blog很丑，虽然没有人看，自己记录也会影响心情。看到很多优质博客，决定改进一下自己的blog。</p><hr><h3 id="Why-amp-How？"><a href="#Why-amp-How？" class="headerlink" title="Why &amp; How？"></a>Why &amp; How？</h3><p>我自认为是一个喜欢记录但不喜欢反思的人。写blog既能让我记录自己的生活、经验和想法，也能方便自己回顾和整理自己的思路。工作之后，每天接触的新知识越来越多，生活上的感悟也越来越多，还是决定重新拿起键盘，开始记录自己的想法。写博客的初衷就是为了记录，不让自己遗忘，使用文本笔记或者PPT等图形工具不方便组织，且无法不方便同步共享，因此还是决定使用在线blog的形式，说起来又有点像十年前玩的QQ空间，hhh。</p><p>本文之后的语言使用讲述式的方式，一方面记录自己在搭建blog时遇到的问题，另一方面可供小白参考，从零到一搭建一个属于自己的个人网站。</p><p>首先，对本文所使用到的关键技术进行说明：</p><ul><li><strong>Hexo</strong>：这是一个基于Node.js的静态网站生成器，它可以帮助你方便地创建和管理自己的个人博客。它的使用方式类似于Jekyll、Hugo等其他静态网站生成器，可以通过设置主题、插件和其他配置来自定义自己的博客。Hexo具有快速、简单、易于扩展和使用等特点，目前被许多博客作者广泛采用。</li><li><strong>GitHub Pages</strong>：是一个网页托管服务，可以将静态网页或博客网站托管在GitHub上。通过使用GitHub Pages服务，你可以免费地创建自己的网站，并且可以使用自己的域名访问该网站。GitHub Pages支持多种技术堆栈，如HTML、CSS、JavaScript等，也可以集成Jekyll等博客生成器。通过将自己的代码托管到GitHub上，在代码更新时，GitHub Pages会自动刷新你的网站，使得网站的维护和更新变得更加方便和高效。因此，GitHub Pages是一个非常受欢迎的静态网页托管服务，也是许多程序员和博客作者常用的工具。</li></ul><p>利用这两个技术就能够免费地搭建一个属于自己的网站，如本站一样。</p><h4 id="Hexo主要命令"><a href="#Hexo主要命令" class="headerlink" title="Hexo主要命令"></a>Hexo主要命令</h4><p>hexo常用的命令就以下6个：</p><ul><li><code>hexo init [folder]</code>: 新建一个网站。如果没有设置 <code>folder</code> ，Hexo 默认在目前的文件夹建立网站；</li><li><code>hexo new file_name</code>：新建一篇文章。</li><li><code>hexo generate</code>: 生成静态文件；</li><li><code>hexo server</code>: 启动服务器。默认情况下，访问网址为： <code>http://localhost:4000/</code>；</li><li><code>hexo deploy</code>: 部署网站（后文会用得）；</li><li><code>hexo clean</code>: 清除缓存文件 (<code>db.json</code>) 和 <code>public</code> 文件夹下已生成的静态文件。</li></ul><hr><h3 id="使用Hexo本地建站"><a href="#使用Hexo本地建站" class="headerlink" title="使用Hexo本地建站"></a>使用Hexo本地建站</h3><h4 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h4><p>安装hexo十分简单，根据 Hexo 的官方文档 <a class="link"   href="https://hexo.io/zh-cn/docs/index.html" >开始使用 — 概述<i class="fas fa-external-link-alt"></i></a>，安装 Hexo 的前提是先安装 <a class="link"   href="https://nodejs.org/zh-cn/" >Node.js<i class="fas fa-external-link-alt"></i></a> 和 <a class="link"   href="https://git-scm.com/download" >Git<i class="fas fa-external-link-alt"></i></a>，在安装完这两者后，安装 Hexo 很简单，只需在终端（cmd、Git bash、Node.js command prompt 均可）中敲入如下命令，回车等待安装完成。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h4 id="建立本地站点"><a href="#建立本地站点" class="headerlink" title="建立本地站点"></a>建立本地站点</h4><ul><li><p><strong>Step 1:</strong> 先在电脑中的某一位置建立好 <code>your_name.github.io</code> 文件夹，比如 <code>D:\Blog\your_name.github.io</code>；</p></li><li><p><strong>Step 2:</strong> 在终端（最好使用git bash）中切换到 <code>your_name.github.io</code> 文件夹所在的路径。</p></li><li><p><strong>Step 3:</strong> 由于默认的 NPM 镜像实在太慢太慢，我们把源替换成淘宝的镜像，在终端中执行如下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry &quot;https://registry.npm.taobao.org&quot;</span><br></pre></td></tr></table></figure></li><li><p><strong>Step 4:</strong> 根据 Hexo 的官方文档 <a class="link"   href="https://hexo.io/zh-cn/docs/setup.html" >开始使用 — 建站<i class="fas fa-external-link-alt"></i></a>，依次执行下面两条命令，建立我们的新网站：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>由于使用了淘宝的镜像，加载会很快。完成后，<code>your_name.github.io</code> 文件夹下面的目录如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure><ul><li><code>_config.yml</code> 文件存放着网站的配置信息，可以在这里配置大部分的参数。</li><li><code>package.json</code> 文件存放着插件信息，从中可以查看那些插件已经安装。</li><li><code>scaffolds</code> 是模板文件夹，新建文章时，Hexo 会根据 scaffold 来建立文件，不过这个模板和后面的主题里指的模板不一样。</li><li><code>source</code> 是存放用户资源的地方的文件夹，除 <code>_posts</code> 文件夹之外，开头命名为 <code>_</code> (下划线) 的文件 &#x2F; 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 <code>public</code> 文件夹（别急，等下会生成的），而其他文件会被拷贝过去。</li><li><code>themes</code> 主题文件夹，Hexo 会根据主题来生成静态页面，我们以后自己安装的主题也都会放在这个文件夹下面，默认的 landscape 主题已经在里面了。</li></ul></li><li><p><strong>Step 5:</strong> 根据 Hexo 的官方文档 <a class="link"   href="https://hexo.io/zh-cn/docs/commands.html" >开始使用 — 命令<i class="fas fa-external-link-alt"></i></a>，在终端中敲入 <code>hexo server</code> 命令（确保路径仍在 <code>your_name.github.io</code> 下），可以在 <a class="link"   href="http://localhost:4000/" >http://localhost:4000/<i class="fas fa-external-link-alt"></i></a> 中看到我们网站默认的样子了。</p></li></ul><h4 id="配置站点"><a href="#配置站点" class="headerlink" title="配置站点"></a>配置站点</h4><p>上节说到，<code>_config.yml</code> 文件存放了网站的配置信息。我们可以在 <code>_config.yml</code> 中大部份的配置，里面每一个参数的含义可以查看 Hexo 的官方文档 <a class="link"   href="https://hexo.io/zh-cn/docs/configuration.html" >开始使用 — 配置<i class="fas fa-external-link-alt"></i></a> ，这里我暂且只修改了 <code>title</code>，<code>subtitle</code> 和 <code>author</code>，替换成自己网站的名字和作者名即可。</p><p>如果有同学觉得默认的网址链接有点长，可以将 <code>permalink</code> 改成如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">permalink: :title/</span><br></pre></td></tr></table></figure><p><code>per_page</code> 决定首页显示多少篇文章。其余的设置，比如 theme，deploy 我们之后用到了再来更改。</p><h4 id="编写blog内容"><a href="#编写blog内容" class="headerlink" title="编写blog内容"></a>编写blog内容</h4><p>新建一篇blog的方法有两种：</p><ul><li><p>一种是直接使用hexo提供的命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new 文章文件名</span><br></pre></td></tr></table></figure><p>执行完该命令，会在<code>/source/_posts</code>文件夹下产生一个Markdown文件，再去编辑内容即可。</p></li><li><p>另外一种方法是在 <code>_posts</code> 文件夹下，新建一个 Markdown 文件，或者把你以前有的 Markdown 文件复制进来，根据 Hexo 的官方文档 <a class="link"   href="https://hexo.io/zh-cn/docs/front-matter.html" >基本操作 — Front-matter<i class="fas fa-external-link-alt"></i></a> ，写好你的第一篇文章，比如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">title: Test for Hexo</span><br><span class="line">date: 2016/12/7 20:46:25</span><br><span class="line">categories:</span><br><span class="line">- Diary</span><br><span class="line">tags:</span><br><span class="line">- PS3</span><br><span class="line">- Games</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">Hexo Test.</span><br></pre></td></tr></table></figure><p>这里，Front-matter 是文件最上方以 <code>---</code> 分隔的区域，用于指定文章的标题、建立日期、更新日期等，如果主题模板还支持分类和标签的话（比如默认的 landscape 主题），还可以指定分类和标签。</p></li></ul><h4 id="生成blog"><a href="#生成blog" class="headerlink" title="生成blog"></a>生成blog</h4><p>根据 Hexo 的官方文档 <a class="link"   href="https://hexo.io/zh-cn/docs/generating.html" >基本操作 — 生成文件<i class="fas fa-external-link-alt"></i></a>，在终端中敲入如下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure><p>Hexo 会替我们刚加入到 <code>_posts</code> 文件夹下的 markdown 文件生成静态文件。运行 <code>hexo server</code> 可以在 <a class="link"   href="http://localhost:4000/" >http://localhost:4000/<i class="fas fa-external-link-alt"></i></a> 中看到我们新添加的网页内容了。至此，我们采用默认主题 landscape 的网站已经生成了。</p><h4 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h4><p>默认的主题landscape比较简单，hexo为我们提供了很多中网站主题（截至目前官方主题有384个），且都是开源的，我们可以根据自己的喜好选取并修改网站主题。<a class="link"   href="https://hexo.io/themes/" >Themes | Hexo<i class="fas fa-external-link-alt"></i></a> 是hexo提供的官方主题，本站目前使用的是XPoet的keep主题，主打的就是一个简单优雅，哈哈哈，喜欢的小伙伴可以去<a class="link"   href="https://keep-docs.xpoet.cn/" >keep主题使用指南<i class="fas fa-external-link-alt"></i></a>上学习。</p><p>以本站的keep theme为例：</p><ul><li><p>首先，安装keep主题</p><ul><li><p>如果你在使用 Hexo 5.0 或更高版本，最简单的安装方式是通过 NPM <strong>（推荐）</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd hexo-site</span><br><span class="line">npm install hexo-theme-keep</span><br></pre></td></tr></table></figure></li><li><p>或者使用 Git 克隆整个仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd hexo-site</span><br><span class="line">git clone https://github.com/XPoet/hexo-theme-keep themes/keep</span><br></pre></td></tr></table></figure></li></ul></li><li><p>然后，修改配置</p><ul><li><p>Keep 主题安装完成后，在 Hexo 配置文件 <code>_config.yml</code> 中将 <code>theme</code> 设置为 <code>keep</code>。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: keep</span><br></pre></td></tr></table></figure></li></ul></li></ul><p>如此，便可快速使用keep主题样式，其他更多的配置，详见下一篇blog——<a class="link"   href="https://lucky-carp.github.io/keep-theme/" >《Keep theme，simple and elegant》<i class="fas fa-external-link-alt"></i></a></p><hr><h3 id="网站部署到GitHub"><a href="#网站部署到GitHub" class="headerlink" title="网站部署到GitHub"></a>网站部署到GitHub</h3><p>部署到 Github 的命令行操作都在 Git Bash 中完成。事实上，这一环节非常简单，其实本质上就是一个 <code>git push</code> 操作，并且，hexo为我们提供的deploy命令将会更加方便。</p><h4 id="创建远程仓库"><a href="#创建远程仓库" class="headerlink" title="创建远程仓库"></a>创建远程仓库</h4><p>要在 Github 上创建项目，当然首先需要<a class="link"   href="https://github.com/join?source=header-home" >注册 Github帐号<i class="fas fa-external-link-alt"></i></a>。然后新建一个用于存放blog文件的仓库，要注意的是，Repository name 一定要是 <code>your_name.github.io</code> ，<code>your_name</code> 是你的 Github 用户名。另外，仓库的权限要是public的，否则，使用github page将会收费。</p><h4 id="登录Git"><a href="#登录Git" class="headerlink" title="登录Git"></a>登录Git</h4><p>根据 Github 的官方文档 <a class="link"   href="https://help.github.com/articles/set-up-git/#setting-up-git" >Setting up Git<i class="fas fa-external-link-alt"></i></a>，这一操作的目的是 Tell Git your <em>name</em> so your commits will be properly labeled 和 Tell Git the <em>email address</em> that will be associated with your Git commits，也就是告诉版本控制软件 Git 接下来这台电脑上提交的文件是 E-mail 地址是什么的谁谁谁提交的。在 Git Bash 中执行如下代码即可：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;YOUR NAME&quot;</span><br><span class="line">git config --global user.email &quot;YOUR EMAIL ADDRESS&quot;</span><br></pre></td></tr></table></figure><p>其中，<code>YOUR NAME</code> 是自己取的名字，<code>YOUR EMAIL ADDRESS</code> 是自己的邮箱。由于自己的博客网站就自己一个人提交，所以就都设置成跟 Github 用户名和邮箱相同了。但其实是可以不同的，因为对于很多项目，并不只有一个开发者，Github 允许多人向同一个 Repo 提交，这里提供用户名和邮箱，只是为了搞清楚哪些代码是谁谁谁提交的。</p><h4 id="身份认证"><a href="#身份认证" class="headerlink" title="身份认证"></a>身份认证</h4><p>我们的最终目的是实现在终端中敲入 <code>hexo deploy</code> 后，Hexo 会将我们本地的 <code>public</code> 文件夹下的东西上传到 Github 服务器，这样我们就可以通过 <code>your_name.github.io</code> 这个域名（<code>your_name</code> 是你的 Github 用户名）看到我们已经上网的博客网站了。</p><p>为了实现这个目的，首先我们先要让本地的电脑和 Github 服务器建立起某种联系，也就是让 Github 服务器信任由我这台电脑提交的东西，接受，并存放到 <code>your_name.github.io</code> 这个 Repo 下面，与 Github 服务器建立信任的这个环节就是身份认证（Authenticating ）。根据 Github 的官方文档 <a class="link"   href="https://help.github.com/articles/set-up-git/#next-steps-authenticating-with-github-from-git" >Authenticating with GitHub from Git<i class="fas fa-external-link-alt"></i></a> 这里，我们选择 <a href="https://help.github.com/articles/set-up-git/#connecting-over-ssh"><strong>Connecting over SSH</strong></a> 这一种方式。在 Github 的官方文档 <a class="link"   href="https://help.github.com/categories/ssh/" >Categories &#x2F; SSH<i class="fas fa-external-link-alt"></i></a> 下，我们能找到关于 Github 与 SSH 的资料。</p><h5 id="生成新的-SSH-key"><a href="#生成新的-SSH-key" class="headerlink" title="生成新的 SSH key"></a>生成新的 SSH key</h5><p>根据 Github 的官方文档 <a class="link"   href="https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/#generating-a-new-ssh-key" >Generating a new SSH key<i class="fas fa-external-link-alt"></i></a> ， 我们在 Git Bash 下执行如下命令，生成 SSH key</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -C &quot;your_email@example.com&quot;</span><br></pre></td></tr></table></figure><p>其中，<code>your_email@example.com</code> 是你的 Github 注册邮箱。然后，Git Bash 中会出现</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Generating public/private rsa key pair.</span><br></pre></td></tr></table></figure><p>表示新的 SSH 已经生成了。随后会出现</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Enter a file in which to save the key</span><br><span class="line">(/Users/you/.ssh/id_rsa): [Press enter]</span><br></pre></td></tr></table></figure><p>这里 <code>id_rsa</code> 是生成的 key 文件的文件名，默认都是这个；如果不是，在后面用到 <code>id_rsa</code> 的地方请替换成出现的名字。这条信息是让你选择 SSH key 存放的地点，按回车选择默认的即可。回车后，还会出现</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Enter passphrase (empty for no passphrase): [Type a passphrase]</span><br><span class="line">Enter same passphrase again: [Type passphrase again]</span><br></pre></td></tr></table></figure><p>让你设置使用 SSH 密钥时的密码，由于我们都是在自己个人的电脑上操作，所以仍然回车，不设置密码即可。</p><h5 id="将-SSH-key-添加到-ssh-agent"><a href="#将-SSH-key-添加到-ssh-agent" class="headerlink" title="将 SSH key 添加到 ssh-agent"></a>将 SSH key 添加到 ssh-agent</h5><p><a class="link"   href="https://en.wikipedia.org/wiki/Ssh-agent" >ssh-agent<i class="fas fa-external-link-alt"></i></a> 是一个在本地登录会话持续时间内，将未加密的密钥存储在内存中，并使用 Unix 域套接字与 SSH 客户端进行通信的程序。根据 Github 的官方文档 <a class="link"   href="https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/#adding-your-ssh-key-to-the-ssh-agent" >Adding your SSH key to the ssh-agent<i class="fas fa-external-link-alt"></i></a> ， 我们在 Git Bash 下执行如下命令，开启 ssh-agent</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eval &quot;$(ssh-agent -s)&quot;</span><br></pre></td></tr></table></figure><p>然后我们要将这个 SSH key 添加到 ssh-agent 里去，运行如下命令，其中 <code>id_rsa</code> 是你的 key 文件的文件名：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-add ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure><h5 id="将-SSH-key-添加到-Github-账户"><a href="#将-SSH-key-添加到-Github-账户" class="headerlink" title="将 SSH key 添加到 Github 账户"></a>将 SSH key 添加到 Github 账户</h5><p>Github 的官方文档 <a class="link"   href="https://help.github.com/articles/adding-a-new-ssh-key-to-your-github-account/" >Adding a new SSH key to your GitHub account<i class="fas fa-external-link-alt"></i></a> 已经图文并茂将如何在 Github帐号中添加 SSH 介绍的非常清楚了。先是在 Git Bash 中将 SSH Key 拷贝出来：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">clip &lt; ~/.ssh/id_rsa.pub</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Copies the contents of the id_rsa.pub file to your clipboard</span></span><br></pre></td></tr></table></figure><p><code>id_rsa</code> 是你刚才的 SSH Key 文件。此时，SSH Key 已经在我们的剪切板里了。然后登录 Github 帐号，依次点击自己的头像，<strong>Settings</strong>，<strong>SSH and GPG keys</strong>，<strong>New SSH key</strong> 或者 <strong>Add SSH key</strong>， 在 <strong>Title</strong> 这里输入 Key 的label，比如 <code>your_name - PC</code>，然后在 Key 里面把 <strong>SSH Key</strong> 粘贴进去，点击 <strong>Add SSH key</strong> 大功告成。</p><p><strong>以上部分就是在生成身份认证的凭证 SSH key，分别放在自己本地电脑和 Github 服务器上，以后向 Github 提交内容的时候，两者的 Key 匹配就可以了，省去了我们每次输密码的时间。</strong></p><h5 id="测试-SSH-连接"><a href="#测试-SSH-连接" class="headerlink" title="测试 SSH 连接"></a>测试 SSH 连接</h5><p>在大功告成之前，为了稳妥起见，我们来测试一下自己跟 Github 服务器 SSH 连接是否已经建立起来了。Github 的官方文档 <a class="link"   href="https://help.github.com/articles/testing-your-ssh-connection/" >Testing your SSH connection<i class="fas fa-external-link-alt"></i></a> 已经将次环节介绍得非常详细了。我们要做得就是在 Git Bash 中敲入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>你可能会看到类似于</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">The authenticity of host &#x27;github.com (192.30.252.1)&#x27; can&#x27;t be established.</span><br><span class="line">RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.</span><br><span class="line">Are you sure you want to continue connecting (yes/no)?</span><br></pre></td></tr></table></figure><p>没关系的，输入 <code>yes</code> 敲回车，就可以看到如下的成功信息了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hi username! You&#x27;ve successfully authenticated, but GitHub does not</span><br><span class="line">provide shell access.</span><br></pre></td></tr></table></figure><p>至此为止，我们已经建立起了跟 Github 服务器的连接。其实我们也可以用 <code>git push</code> 命令，提交 <code>public</code> 文件夹下面的内容，不过 Hexo 更我们提供了更方便的途径。</p><h4 id="Hexo-部署"><a href="#Hexo-部署" class="headerlink" title="Hexo 部署"></a>Hexo 部署</h4><p>Hexo 提供了 <code>hexo deploy</code> 命令，可以方便地将整个 <code>public</code> 文件夹部署到 Github 服务器上去。根据 Hexo 的官方文档 <a class="link"   href="https://hexo.io/zh-cn/docs/deployment.html" >基本操作 — 部署<i class="fas fa-external-link-alt"></i></a> 我们只需要做以下两步：</p><ul><li><strong>Step 1:</strong> 在终端中运行如下命令，安装 <code>hexo-deployer-git</code> 插件：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><ul><li><p><strong>Step 2:</strong> 在 <code>_config.yml</code> 中修改参数，如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/your_name/your_name.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>其中，your_name 是你的 Github 帐号名。<code>repo</code> 对应的是你 <code>your_name.github.io</code> 这个项目的库（Repository）地址，进入这个项目的主页，点击 <strong>Clone or download</strong> 下拉菜单也能看到。<code>branch</code> 是分支名称，如果使用的是 GitHub 或 GitCafe 的话，程序会尝试自动检测，通常都是 <code>master</code>。 <strong>注意，冒号后的空格非常重要，一定要有！</strong></p><p>在第一次部署的时候，Github 还会跳出来一个小窗口，让你输入 Github 帐号和密码，输入即可。</p></li></ul><p>博客第一次创建，即使 deploy 成功了，但仍然不会立刻可以访问，还需要等待 15 分钟以上。可以使用如下方法，让blog的内容快速更新：</p><ul><li><strong>Step 1:</strong> 到 your_name.github.io 项目的 Github 主页，上方最右侧有一个 <strong>Settings</strong>，点击 <strong>Settings</strong>，拉到 <strong>Pages</strong>，在Build and deployment选项下有一个branch选项，选择部署的分支(master&#x2F;(root))，点击save，就能够看到your_name.github.io 可以访问了。</li><li><strong>Step 2:</strong> 再试着 <code>hexo deploy</code> 一次，如果页面正常了那就大功告成了，假使遇到 Permission Denied，再 <code>hexo deploy</code> 一次就好。</li></ul><p>到目前为止，我们的blog就已经搭建好了，可以根据生成的网址进行访问，如本站网址：<a class="link"   href="https://lucky-carp.github.io/%E3%80%82%E5%BD%93%E7%84%B6%EF%BC%8C%E6%9C%89%E4%BA%9B%E5%90%8C%E5%AD%A6%E5%8F%AF%E8%83%BD%E5%B8%8C%E6%9C%9B%E8%83%BD%E5%A4%9F%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E8%BE%93%E5%85%A5%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9F%9F%E5%90%8D%EF%BC%8C%E6%AF%94%E5%A6%82" >https://lucky-carp.github.io/。当然，有些同学可能希望能够在浏览器中输入自己的域名，比如<i class="fas fa-external-link-alt"></i></a> <code>your.site</code>，就可以看到自己的网站。这就需要绑定自己的独立域名，本站在写本篇文章的时候还未绑定域名，但在此也进行说明，以便后续绑定域名。</p><hr><h3 id="绑定独立域名"><a href="#绑定独立域名" class="headerlink" title="绑定独立域名"></a>绑定独立域名</h3><h4 id="购买域名"><a href="#购买域名" class="headerlink" title="购买域名"></a>购买域名</h4><p>域名提供商非常多，比如 <a class="link"   href="https://www.godaddy.com/en-sg" >Godaddy<i class="fas fa-external-link-alt"></i></a>、 DNSPod 和 <a class="link"   href="https://www.gandi.net/zh-Hans" >Gandi<i class="fas fa-external-link-alt"></i></a> ，这三者都支持支付宝付款。我预计要在Gandi 上购买域名：<code>luckycarp.me</code>或者<code>luckycarp.xyz</code>。但是发现GoDadday上的域名售价更加便宜。域名注册很简单，不过需要特别注意的是，虽然 Gandi 提供了简体中文的界面，但填写注册信息的时候，<strong>一定要填英文字符！！！</strong>。输入中文也能够注册成功，但坑的是什么呢？在你付完款以后，会域名创建不成功，原因卡在比如地址信息中的中文字符集超出范围了。遇上了这种情况，也不要慌，在 Gandi 的 <strong>账户管理</strong> 中的 <strong>更新账户资讯</strong> 中把中文字符改成英文的，然后再在 <strong>服务</strong> 中的 <strong>域名</strong> 这里点击类似重启该操作字样的按钮即可。至此，第一步购买域名已经完成。</p><ul><li><p><strong>Step 1: 告诉 Github <code>your_name.github.io</code> 对应哪个域名</strong></p><ul><li><p>在 <code>source</code> 文件夹下添加一个 <code>CNAME</code> 文件，里面就一行内容，写上自己的域名，比如 <code>your.site</code>。 在终端中运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure></li><li><p>Hexo 在生成 <code>public</code> 文件夹内容的时候，会自动把 <code>CNAME</code> 文件复制过去，这样，<code>public</code> 文件夹下就也有 <code>CNAME</code> 文件了。再运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>将其部署到 Github，让 Github 知道 <code>your_name.github.io</code> 对应哪个域名。</p></li></ul></li><li><p><strong>Step 2: 告诉 Gandi 我要用 DNSPod 解析域名</strong></p><p>登录 Gandi，点击 <strong>服务</strong> 中的 <strong>域名</strong> 中你购买的域名，进入 <strong>域名 &gt; your.site</strong> 页面，your.site 是你购买的域名，在网页的下方找到 <strong>修改伺服器</strong>，点击进入。删掉 Gandi 原来自带的 3 个 DNS 服务器地址，填入 DNSPod 的域名服务器。那 DNSPod 的域名服务器是什么呢？在 DNSPod 的官方文档 <a class="link"   href="https://support.dnspod.cn/Kb/showarticle/?qtype=%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B&tsid=178" >DNSPod 各个套餐的 DNS 地址<i class="fas fa-external-link-alt"></i></a> 中可以知道，DNSPod 免费 DNS 服务器的地址为：<code>f1g1ns1.dnspod.net</code> 和 <code>f1g1ns2.dnspod.net</code>。在 Gandi 那里把这两个地址依次填入，保存。</p></li><li><p><strong>Step 3: 告诉 DNSPod 域名对应的网站存放在哪台服务器上</strong></p><p>DNSPod 的官方文档 <a class="link"   href="https://support.dnspod.cn/Kb/showarticle/tsid/177/" >学会使用 DNSPod，仅需三步<i class="fas fa-external-link-alt"></i></a> 已经图文并茂的将如何告诉 DNSPod 域名对应的网站存放在哪台服务器上介绍地非常详细了。在注册完 DNSPod 后，点击 <strong>添加域名</strong>，添加上自己购买的域名，点击 <strong>确定</strong>，再点击刚添加的域名，在域名记录管理界面，点击 <strong>添加记录</strong>，添加两条 A 记录即可。</p></li><li><p>其中，<code>192.30.252.153</code> 和 <code>192.30.252.154</code> 为 GIthub 服务器的 IP 地址，可以从 Github 的官方文档 <a class="link"   href="https://help.github.com/articles/setting-up-an-apex-domain/#configuring-a-records-with-your-dns-provider" >Configuring A records with your DNS provider<i class="fas fa-external-link-alt"></i></a> 知道。DNSPod 域名解析生效非常快，只要等待十来秒即可用自己的域名访问了。至此，拥有独立域名的博客网站都已经搭建完了。</p></li></ul><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li>本文主要参考了Grok的blog：<a class="link"   href="http://lowrank.science/Hexo-Github/" >《用Hexo搭建博客》<i class="fas fa-external-link-alt"></i></a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;2022年之前的blog收录在gitee pages，网站为：&lt;code&gt;https://liyang199802.gitee.io/&lt;/code&gt;，仍可访问。但是由于gitee现在对文件中的敏感词汇审查过于严格，导致检查文章中词汇耗费了大量时间，因此，今年开始使用gith</summary>
      
    
    
    
    <category term="Technology" scheme="http://example.com/categories/Technology/"/>
    
    
    <category term="Tool" scheme="http://example.com/tags/Tool/"/>
    
  </entry>
  
</feed>
