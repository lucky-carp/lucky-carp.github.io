<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LuckyCarp</title>
  
  <subtitle>A carp swimming in the ocean of knowledge.</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-05-09T11:09:01.149Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Yang Li</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>clickhouse-base</title>
    <link href="http://example.com/clickhouse-base/"/>
    <id>http://example.com/clickhouse-base/</id>
    <published>2023-05-09T11:07:26.000Z</published>
    <updated>2023-05-09T11:09:01.149Z</updated>
    
    <content type="html"><![CDATA[<p>本篇记录了clickhouse的基础知识，用于回顾。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本篇记录了clickhouse的基础知识，用于回顾。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="Technology" scheme="http://example.com/categories/Technology/"/>
    
    
    <category term="knowledge" scheme="http://example.com/tags/knowledge/"/>
    
  </entry>
  
  <entry>
    <title>fitness0508</title>
    <link href="http://example.com/fitness0508/"/>
    <id>http://example.com/fitness0508/</id>
    <published>2023-05-09T10:28:32.000Z</published>
    <updated>2023-05-09T11:06:37.307Z</updated>
    
    <content type="html"><![CDATA[<p>私教课的第二节，今天练胸！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;私教课的第二节，今天练胸！&lt;/p&gt;
</summary>
      
    
    
    
    <category term="Life" scheme="http://example.com/categories/Life/"/>
    
    
    <category term="Fitness" scheme="http://example.com/tags/Fitness/"/>
    
  </entry>
  
  <entry>
    <title>美食分享——天宝兄弟罗氏虾</title>
    <link href="http://example.com/roche-shrimp/"/>
    <id>http://example.com/roche-shrimp/</id>
    <published>2023-05-09T10:19:36.000Z</published>
    <updated>2023-05-09T10:26:53.414Z</updated>
    
    <content type="html"><![CDATA[<p>天宝兄弟的罗氏虾在长沙这个遍地小龙虾的地盘竟然能做到一绝，让我跟鹿崽流连忘返，必有它的绝佳秘方，但是一盘一斤的罗氏虾能卖到228，活虾也才80一斤，为了减少消费，拴住老婆的胃，这菜我必须学会！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;天宝兄弟的罗氏虾在长沙这个遍地小龙虾的地盘竟然能做到一绝，让我跟鹿崽流连忘返，必有它的绝佳秘方，但是一盘一斤的罗氏虾能卖到228，活虾也才80一斤，为了减少消费，拴住老婆的胃，这菜我必须学会！&lt;/p&gt;
</summary>
      
    
    
    
    <category term="Life" scheme="http://example.com/categories/Life/"/>
    
    
    <category term="Cooking" scheme="http://example.com/tags/Cooking/"/>
    
  </entry>
  
  <entry>
    <title>Keep——A simple and elegant theme for Hexo.</title>
    <link href="http://example.com/keep-theme/"/>
    <id>http://example.com/keep-theme/</id>
    <published>2023-05-09T07:51:23.000Z</published>
    <updated>2023-05-10T03:56:41.388Z</updated>
    
    <content type="html"><![CDATA[<p><a class="link"   href="https://hexo.io/themes/" >Themes | Hexo<i class="fas fa-external-link-alt"></i></a> 提供了很多网站主题，Keep主题是我目前最喜欢，也我认为最适合新手的一个主题（因为它的文档真的很详细！）</p><p>本篇博客主要记录了我使用keep主题时的配置，hexo的主题自由度很高，大家也可以根据个人喜好在此基础上构建漂亮的blog。</p><blockquote><p>本篇涉及到的几个工具：</p><ul><li><strong>Hexo</strong>：Hexo是一个基于Node.js的静态博客框架，可以使用Markdown格式的文本快速创建个人博客并轻松发布到网络。Hexo提供了许多有用的功能，例如多语言支持、主题和插件、自动化部署等，可以帮助用户建立一个美观、高效、易用的个人博客网站。同时，由于Hexo生成的是静态页面，因此具有快速、安全和稳定的特点。详见<a class="link"   href="https://hexo.io/zh-cn/index.html" >Hexo官网<i class="fas fa-external-link-alt"></i></a>。</li><li><strong>Keep theme</strong>：一个hexo网站主题，详见<a class="link"   href="https://keep-docs.xpoet.cn/" >keep主题使用指南<i class="fas fa-external-link-alt"></i></a>，特点有：<ul><li>极致体验（Keep 主题拥有更加合理的源代码组织形式，给你带来极致的页面加载体验。）</li><li>简约至上（不管后续如何变化，Keep 主题始终围绕「 简约、轻快 」来维护和升级。）</li><li>化繁为简（只需简单配置就能有强大功能，让我们专注写作内容，找回写博客的初衷。）</li></ul></li><li><strong>PicX</strong>：PicX是一款图床工具，也是一个开源的图片存储服务，可以轻松地将图片上传到云端，同时也可以方便地分享和管理图片。PicX支持多种上传方式，例如直接拖拽上传、剪贴板上传、API上传等，还可以自定义上传空间、图片大小、缩略图等参数。使用PicX可以避免自己的服务器上存储过多的图片，使网站加载速度更快，同时也可以享受到云服务带来的便利和安全性。详见<a class="link"   href="https://picx.xpoet.cn/" >PicX官网<i class="fas fa-external-link-alt"></i></a>。</li><li><strong>valine</strong>：Valine是一个基于LeanCloud的无后端评论系统，它是一款轻量级、快速、简单而强大的评论系统，支持一键集成到各种静态博客或网站中。Valine整合了LeanCloud的存储和访问速度快、具有良好的安全性能的优点，支持多语言、支持评论表情、评论邮件提醒、验证码等功能。同时，Valine采用了前端渲染和AJAX异步请求的方式，使得对服务器的压力较小，并且具有良好的扩展性能。Valine现已成为许多使用静态博客框架的开发者的常用工具。详见<a class="link"   href="https://valine.js.org/" >valine官网<i class="fas fa-external-link-alt"></i></a>。</li></ul></blockquote><h3 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h3><p>在使用 Keep 主题之前，如果你对 Hexo 搭建个人博客没有任何经验，建议你可以先简要阅读 <code>「 Easy Hexo 团队 」</code>撰写的 <a class="link"   href="https://easyhexo.com/" >Hexo 教程<i class="fas fa-external-link-alt"></i></a>，能帮助你快速入门 Hexo。</p><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><ul><li><p>如果你在使用 Hexo 5.0 或更高版本，最简单的安装方式是通过 NPM <strong>（推荐）</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd hexo-site</span><br><span class="line">npm install hexo-theme-keep</span><br></pre></td></tr></table></figure></li><li><p>或者使用 Git 克隆整个仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd hexo-site</span><br><span class="line">git clone https://github.com/XPoet/hexo-theme-keep themes/keep</span><br></pre></td></tr></table></figure></li></ul><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>Keep 主题安装完成后，在 Hexo 配置文件（站点配置文件） <code>_config.yml</code> 中将 <code>theme</code> 设置为 <code>keep</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: keep</span><br></pre></td></tr></table></figure><blockquote><p>注意：使用 Keep 主题必须确保你的 Node.js 版本 &gt;&#x3D; 14.0，当你的 Hexo 项目运行时报错或发出警告，请注意升级你的 Node.js 版本。</p></blockquote><h4 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h4><p>Keep 主题不定期发布新版本，你可以通过如下命令更新。</p><ul><li><p>通过 NPM 安装最新版本 <strong>（推荐）</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd hexo-site</span><br><span class="line">npm install hexo-theme-keep@latest</span><br></pre></td></tr></table></figure></li><li><p>通过 Git 更新到最新的 master 分支</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd themes/keep</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="Keep-主题快速启动模板"><a href="#Keep-主题快速启动模板" class="headerlink" title="Keep 主题快速启动模板"></a>Keep 主题快速启动模板</h3><p>Keep 主题官方提供了基于 Hexo 博客框架的快速启动模板，启动模板中的 Hexo 配置文件 <code>_config.yml</code> 和主题配置文件 <code>source/_data/keep.yml</code> 已预设和启用一些比较实用的基础配置项。</p><p>我们可以直接拿来快速创建一个 Hexo 博客项目，无需其他操作，开箱即用，然后在此模板基础上配置出属于自己的独一无二的 Keep 主题博客。<strong>（非常适合新手同学）</strong></p><h4 id="下载模板"><a href="#下载模板" class="headerlink" title="下载模板"></a>下载模板</h4><p>使用 Git 克隆：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/theme-keep/hexo-theme-keep-starter</span><br></pre></td></tr></table></figure><p>直接下载：</p><p><a class="link"   href="https://github.com/theme-keep/hexo-theme-keep-starter/archive/refs/heads/main.zip" >点击这里下载 &gt;&gt; Keep 主题快速启动模板<i class="fas fa-external-link-alt"></i></a></p><h4 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h4><p>「 Keep 主题快速启动模板 」下载完成之后，需要安装项目依赖才能成功运行起来。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd hexo-theme-keep-starter</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><h4 id="运行项目"><a href="#运行项目" class="headerlink" title="运行项目"></a>运行项目</h4><p>项目依赖安装成功之后，使用如下命令即可运行项目，随即在浏览器上看到 Keep 主题的 Hexo 博客。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run server</span><br></pre></td></tr></table></figure><h4 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h4><p>至此，我们可以直接在此模板上自由配置 Keep 主题，最后编译生成静态文件 -&gt; 部署发布。</p><p><strong>注意：为确保你的主题配置项完全生效，请在 <code>source/_data/keep.yml</code> 路径下进行主题配置。</strong></p><blockquote><p>请勿随意移动 <code>keep.yml</code> 文件的路径，确保 <code>keep.yml</code> 在 <code>source/_data/</code> 路径下。<br>请勿随意更改 <code>keep.yml</code> 文件中的配置项字段名称，填写配置项之后，确保缩进是否正确。</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编译生成静态文件</span></span><br><span class="line">npm run build</span><br><span class="line"><span class="comment"># 部署</span></span><br><span class="line">npm run deploy</span><br></pre></td></tr></table></figure><hr><p>我们现在已经可以使用keep主题作为我们网站的样式了，接下来对详细配置项进行说明，从而构建更加符合个人审美的网站，毕竟我们现在做的个人博客也是为了让自己开心嘛！</p><h3 id="base-info"><a href="#base-info" class="headerlink" title="base_info"></a>base_info</h3><p><code>base_info</code> 配置项用于设置你的博客站点基本信息，请正确填写。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">base_info:</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">Keep</span> <span class="string">Theme</span></span><br><span class="line">  <span class="attr">author:</span> <span class="string">Keep</span> <span class="string">Team</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">https://keep.xpoet.cn/</span></span><br></pre></td></tr></table></figure><ul><li><p><strong>title</strong></p><p><code>title</code> 用于设置博客站点的<strong>标题</strong>，将显示在网站的头部，如下图。</p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/lucky-carp/picx-images-hosting@master/20230510/image-20230510101516923.677gt9w70yw0.webp"                                     ></p></li><li><p><strong>author</strong></p><p><code>author</code> 用于设置博客站点的<strong>作者昵称</strong>，显示在<strong>网站底部</strong>、<strong>文章内容页</strong>和<strong>版权信息</strong>，如下图。</p><ul><li><p>网站底部</p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/lucky-carp/picx-images-hosting@master/20230510/image-20230510101617772.45b9jhb9pnc0.webp"                                     ></p></li><li><p>文章内容页</p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/lucky-carp/picx-images-hosting@master/20230510/image-20230510101643540.4jgwxh1u45m0.webp"                                     ></p></li><li><p>版本信息</p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/lucky-carp/picx-images-hosting@master/20230510/image-20230510101710701.74vr7l2etuw0.webp"                                     ></p></li></ul></li></ul><h3 id="style"><a href="#style" class="headerlink" title="style"></a>style</h3><p><code>style</code> 配置项用于自定义配置 Keep 主题的样式，通过这里你可以配置出属于你自己独一无二的 Keep 主题博客站点。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">style:</span></span><br><span class="line">  <span class="attr">primary_color:</span> <span class="string">&quot;#0066cc&quot;</span></span><br><span class="line">  <span class="attr">logo:</span> <span class="string">/images/logo.svg</span></span><br><span class="line">  <span class="attr">favicon:</span> <span class="string">/images/logo.svg</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">/images/avatar.svg</span></span><br><span class="line">  <span class="attr">font_size:</span></span><br><span class="line">  <span class="attr">font_family:</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">hover:</span></span><br><span class="line">    <span class="attr">shadow:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">scale:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">first_screen:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">header_transparent:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">background_img:</span> <span class="string">/images/bg.svg</span></span><br><span class="line">    <span class="attr">description:</span> <span class="string">Keep</span> <span class="string">writing</span> <span class="string">and</span> <span class="string">Keep</span> <span class="string">loving.</span></span><br><span class="line">    <span class="attr">font_color:</span></span><br><span class="line">    <span class="attr">hitokoto:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">scroll:</span></span><br><span class="line">    <span class="attr">progress_bar:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">percent:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><ul><li><p><strong>primary_color</strong></p><p><code>primary_color</code> 用于设置博客站点主题色，支持 <strong>十六进制</strong>、<strong>rgb</strong> 和 <strong>rgba</strong> 颜色格式。<br>例如：<code>#0066cc</code>、<code>rgb(0, 102, 204)</code> 和 <code>rgba(0, 102, 204, 0.8)</code>、。</p><p>获取配色推荐：</p><ul><li><a class="link"   href="https://flatuicolors.com/" >Flat UI Colors<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://www.bootcss.com/p/websafecolors" >Web 安全色<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://color.adobe.com/zh/create/color-wheel" >Adobe Color CC<i class="fas fa-external-link-alt"></i></a></li></ul></li><li><p><strong>logo</strong></p><p><code>logo</code> 用于设置博客站点头部 LOGO，如下图。</p><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/lucky-carp/picx-images-hosting@master/20230510/image-20230510101839373.7hl0tejlk880.webp"                                     ></p><p><strong>关于图片的设置：</strong></p><p>你可以使用 <strong>本地图片</strong>（即存储 <code>keep/source/images/</code> 路径下的图片）或 <strong>图片外链 URL</strong>（适用于使用 NPM 安装的 Keep主题）。最开始我使用本地图片上传的方式，图片加载实在太慢了，于是尝试使用了PicX图床的方式。</p><ul><li><p>本地图片</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">logo:</span> <span class="string">/images/logo.svg</span></span><br></pre></td></tr></table></figure></li><li><p>图片外链（推荐）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">logo:</span> <span class="string">https://cdn.staticaly.com/gh/XPoet/image-hosting@master/hexo-theme-keep/logo.7ihwqpf2atg0.svg</span></span><br></pre></td></tr></table></figure><blockquote><p>图床推荐</p><p>大家可以使用免费的图床工具 <strong>PicX</strong> 来存储自己的图片并生成图片外链。<br>PicX: <a class="link"   href="https://github.com/XPoet/picx" >https://github.com/XPoet/picx<i class="fas fa-external-link-alt"></i></a></p></blockquote></li><li><p>往下的 <code>favicon</code>、<code>avatar</code>、<code>favicon</code>、<code>first_screen.background_img</code> 等配置项的图片设置均使用以上方式。</p></li></ul></li><li><p><strong>favicon</strong></p><p> 用于设置博客站点 favicon 图标。</p></li><li><p><strong>avatar</strong> </p><p>用于设置博客站点<strong>作者头像</strong>，将显示在文章内容页。</p></li><li><p><strong>font_size</strong></p><p><code>font_size</code> 设置博客站点的初始<strong>字体大小</strong>，单位必须为 <strong><code>px</code></strong> 。该配置项可以不填，如果不填将使用 Keep 主题内置的初始字体大小 <code>15.2px</code> 。</p></li><li><p><strong>font_family</strong></p><p><code>font_family</code> 设置博客站点的<strong>字体样式</strong>，该配置项可以不填，如果不填将使用 Keep 主题内置的字体样式。</p><blockquote><p><code>font_family</code> 同 CSS 设置 <code>font-family</code> 规则一致</p></blockquote>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置：楷体</span></span><br><span class="line"><span class="attr">font_family:</span> <span class="string">STKaiti</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置：宋体，黑体</span></span><br><span class="line"><span class="attr">font_family:</span> <span class="string">STSong,</span> <span class="string">STHeiti</span></span><br></pre></td></tr></table></figure></li><li><p><strong>hover</strong></p><p><code>hover</code> 用于设置<strong>鼠标悬浮时的样式</strong>（例如悬浮在主页文章模块、TOC 目录模块、按钮等），可分别开启 <code>shadow</code> 和 <code>scale</code> 效果。</p></li><li><p><strong>first_screen</strong></p><p><code>first_screen</code> 是 Keep 主题 <code>v3.0.0</code> 新增的<strong>首屏模块</strong>，开启后将显示在博客站点首页的第一视野（故称<strong>首屏</strong>）</p></li><li><p><strong>header_transparent</strong></p><p><code>header_transparent</code> 用于在首屏模块开启状态下<strong>设置头部是否透明</strong>，可选值：<code>true</code> 或 <code>false</code>。</p></li><li><p><strong>background_img</strong></p><p><code>background_img</code> 设置首屏背景图片，可使用 <strong>本地图片</strong> 或 <strong>图片外链 URL</strong>。</p><blockquote><p>这里建议大家的高清背景图片用 <a class="link"   href="https://tinypng.com/" >TinyPNG<i class="fas fa-external-link-alt"></i></a> 压缩一下后再使用，可有效提高页面加载速度。</p></blockquote></li><li><p><strong>description</strong></p><p><code>description</code> 设置首屏描述，支持设置两行，换行符 **<code>||</code>**。</p></li><li><p><strong>font_color</strong></p><p><code>font_color</code> 设置首屏描述的字体颜色，可以为空，不填则使用 Keep 主题内置颜色。</p></li><li><p><strong>hitokoto</strong></p><p><code>hitokoto</code> 是 Keep 主题 <code>v3.4.6</code>新增的首屏描述<strong>一言</strong>功能，可选值：<code>true</code> 或 <code>false</code>。</p><p>开启之后，在<strong>每次进入博客站点</strong>或<strong>刷新页面</strong>都会自动呈现出不一样的首屏描述。</p></li><li><p><strong>scroll</strong></p><p><code>scroll</code> 设置页面滚动时的样式。</p></li><li><p><strong>progress_bar</strong></p><p><code>progress_bar</code> 页面滚动时在网站<strong>顶部</strong>显示滚动<strong>进度条</strong>，可选值：<code>true</code> 或 <code>false</code>。</p></li><li><p><strong>percent</strong></p><p><code>percent</code> 页面滚动时在<strong>右下角</strong>工具栏显示滚动<strong>百分比</strong>，可选值：<code>true</code> 或 <code>false</code>。</p></li></ul><hr><h3 id="menu"><a href="#menu" class="headerlink" title="menu"></a>menu</h3><p><code>menu</code> 用于配置博客站点的<strong>头部导航菜单</strong>，如需新增导航菜单，按配置文件里面的格式填写即可。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">Home:</span> <span class="string">/</span>                         <span class="comment"># 首页</span></span><br><span class="line">  <span class="attr">Archives:</span> <span class="string">/archives</span>             <span class="comment"># 归档</span></span><br><span class="line">  <span class="comment"># Tags: /tags                   # 标签</span></span><br><span class="line">  <span class="comment"># Categories: /categories       # 分类</span></span><br><span class="line">  <span class="comment"># Links: /links                 # 链接</span></span><br><span class="line">  <span class="comment"># About: /about                 # 关于</span></span><br><span class="line">  <span class="comment"># ...</span></span><br></pre></td></tr></table></figure><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/lucky-carp/picx-images-hosting@master/20230510/image-20230510113901444.6e27uayqgk00.webp"                                     ></p><p><code>menu</code> 导航菜单可以配置两个跳转方式：</p><ol><li>跳转博客到内部页面。</li><li>跳转到外部第三方网站。</li></ol><h4 id="跳转内部页面"><a href="#跳转内部页面" class="headerlink" title="跳转内部页面"></a>跳转内部页面</h4><p>Hexo 项目在初始（默认）状态下并没有 Categories（分类）、Tags（标签）、About（关于）、Links（友链）等，这些都需要自己<strong>先手动创建，再配置使用</strong>，否则无效。</p><p>我们以创建「 About（关于）」页面为例：</p><ol><li><p>在 Hexo 项目根目录下执行命令 <code>hexo new page about</code> ，即可在 <code>source</code> 目录下生成 about 文件夹。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page about</span><br></pre></td></tr></table></figure></li><li><p>在 Keep 主题配置文件 <code>_config.yml</code> 的 <code>menu</code> 配置项下添加 **<code>About: /about</code>**。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">Home:</span> <span class="string">/</span></span><br><span class="line">  <span class="attr">Archives:</span> <span class="string">/archives</span></span><br><span class="line">  <span class="comment"># Categories: /categories</span></span><br><span class="line">  <span class="comment"># Tags: /tags</span></span><br><span class="line">  <span class="comment"># Links: /links</span></span><br><span class="line">  <span class="attr">About:</span> <span class="string">/about</span></span><br></pre></td></tr></table></figure></li><li><p>打开 Hexo 项目下 <code>/source/about/index.md</code> 文件，填写 Adout 页面的内容。 支持 Markdown 和 HTML 格式；</p><p>参考如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">about</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2020-03-19 14:59:53</span></span><br><span class="line"><span class="attr">comment:</span> <span class="literal">true</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="comment">## About me</span></span><br><span class="line"></span><br><span class="line"><span class="string">XPoet「</span> <span class="string">Keep</span> <span class="string">core</span> <span class="string">developer</span> <span class="string">」...</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="string">...</span></span><br></pre></td></tr></table></figure><blockquote><p>提示</p><p><code>comment: true</code> 表示该页面<strong>开启评论功能</strong>。（默认不开启评论）</p><p>特别注意</p><p>创建页面时自动生成的 <code>title</code> 属性不要修改！不要删除！<br>例如：<code>title: about</code> 不能修改！不能删除！</p></blockquote></li></ol><h4 id="跳转外部网站"><a href="#跳转外部网站" class="headerlink" title="跳转外部网站"></a>跳转外部网站</h4><p>如果要实现在导航栏点击菜单时跳转到第三方网站，只需把配置项的值填写为第三方网站的 URL 即可。 例如：在导航栏配置跳转到 Baidu 网站的菜单。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">Baidu:</span> <span class="string">https://www.baidu.com/</span></span><br><span class="line">  <span class="string">百度:</span> <span class="string">https://www.baidu.com/</span></span><br></pre></td></tr></table></figure><hr><h3 id="social-contact"><a href="#social-contact" class="headerlink" title="social_contact"></a>social_contact</h3><p><code>social_contact</code> 在首屏里面配置第三方社交链接。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">social_contact:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">links:</span></span><br><span class="line">    <span class="attr">github:</span>          <span class="comment"># GitHub</span></span><br><span class="line">    <span class="attr">weixin:</span>          <span class="comment"># WeChat</span></span><br><span class="line">    <span class="attr">qq:</span>              <span class="comment"># QQ</span></span><br><span class="line">    <span class="attr">weibo:</span>           <span class="comment"># WeiBo</span></span><br><span class="line">    <span class="attr">zhihu:</span>           <span class="comment"># ZhiHu</span></span><br><span class="line">    <span class="attr">twitter:</span>         <span class="comment"># Twitter</span></span><br><span class="line">    <span class="attr">facebook:</span>        <span class="comment"># Facebook</span></span><br><span class="line">    <span class="attr">email:</span>           <span class="comment"># Email</span></span><br></pre></td></tr></table></figure><p><img                       lazyload                     alt="image"                     data-src="https://cdn.staticaly.com/gh/lucky-carp/picx-images-hosting@master/20230510/image-20230510115310335.tlsh30o1mg0.webp"                                     ></p><ul><li><p><strong>enable</strong>：<code>enable</code> 设置是否开启显示第三方社交链接，可选值：<code>true</code> 或 <code>false</code>。</p></li><li><p><strong>links</strong>：在 <code>links</code> 下方的第三方社交平台配置项填写自己的 URL。</p><ul><li><p><strong>点击跳转外部链接</strong></p><p>当我们在 <code>links</code> 的配置项里填写的是 URL 时，点击对应图标时会直接跳转到外部 URL。</p><p>配置示例：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">github:</span> <span class="string">https://github.com/lucky-carp</span></span><br></pre></td></tr></table></figure></li><li><p><strong>点击悬浮打开图片</strong></p><p>当我们需要在点击图标时悬浮打开图片，例如点击<strong>微信</strong>图标，悬浮打开微信<strong>二维码</strong>时，那么需要给 URL 加上前缀 **<code>img | </code>**。</p><blockquote><p>此处的 URL 必须是图片外链</p></blockquote><p>配置示例：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">weixin:</span> <span class="string">img</span> <span class="string">|</span> <span class="string">https://x.com/images/wechat.png</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>自定义配置</strong></p><p>Keep 主题内置 Font Awesome <code>v6.2.0</code> 免费版图标，基本已覆盖我们所需的全部图标。</p><p>如果要自定义<strong>更改图标</strong>或<strong>添加其他第三方链接</strong>，例如：添加 Instagram</p><ol><li><p>在 <a class="link"   href="https://fontawesome.com/icons?d=gallery&s=solid&m=free" >Font Awesome<i class="fas fa-external-link-alt"></i></a> 搜索 Instagram 图标。</p></li><li><p>填写图标名（如上图），添加到主题配置文件 <code>_config.yml</code> 的 <code>social_contact.links</code> 配置项里面。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">social_contact:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">links:</span></span><br><span class="line">    <span class="attr">instagram:</span> <span class="string">https://www.instagram.com/xxxxxxxx</span></span><br></pre></td></tr></table></figure></li></ol></li></ul><hr><h3 id="home-article"><a href="#home-article" class="headerlink" title="home_article"></a>home_article</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a class=&quot;link&quot;   href=&quot;https://hexo.io/themes/&quot; &gt;Themes | Hexo&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/a&gt; 提供了很多网站主题，Keep主题是我目前最喜欢，也我认为最</summary>
      
    
    
    
    <category term="Technology" scheme="http://example.com/categories/Technology/"/>
    
    
    <category term="Tool" scheme="http://example.com/tags/Tool/"/>
    
  </entry>
  
  <entry>
    <title>Build your first blog with Hexo</title>
    <link href="http://example.com/firstblog/"/>
    <id>http://example.com/firstblog/</id>
    <published>2023-05-08T07:51:32.000Z</published>
    <updated>2023-05-09T08:48:07.299Z</updated>
    
    <content type="html"><![CDATA[<p>2022年之前的blog收录在gitee pages，网站为：<code>https://liyang199802.gitee.io/</code>，仍可访问。但是由于gitee现在对文件中的敏感词汇审查过于严格，导致检查文章中词汇耗费了大量时间，因此，今年开始使用github pages来维护个人blog，使用hexo构建个人网站的方法与使用gitee pages基本一致。</p><p>另一方面，作为一个小白，搭建的blog很丑，虽然没有人看，自己记录也会影响心情。看到很多优质博客，决定改进一下自己的blog。</p><hr><h3 id="Why-amp-How？"><a href="#Why-amp-How？" class="headerlink" title="Why &amp; How？"></a>Why &amp; How？</h3><p>我自认为是一个喜欢记录但不喜欢反思的人。写blog既能让我记录自己的生活、经验和想法，也能方便自己回顾和整理自己的思路。工作之后，每天接触的新知识越来越多，生活上的感悟也越来越多，还是决定重新拿起键盘，开始记录自己的想法。写博客的初衷就是为了记录，不让自己遗忘，使用文本笔记或者PPT等图形工具不方便组织，且无法不方便同步共享，因此还是决定使用在线blog的形式，说起来又有点像十年前玩的QQ空间，hhh。</p><p>本文之后的语言使用讲述式的方式，一方面记录自己在搭建blog时遇到的问题，另一方面可供小白参考，从零到一搭建一个属于自己的个人网站。</p><p>首先，对本文所使用到的关键技术进行说明：</p><ul><li><strong>Hexo</strong>：这是一个基于Node.js的静态网站生成器，它可以帮助你方便地创建和管理自己的个人博客。它的使用方式类似于Jekyll、Hugo等其他静态网站生成器，可以通过设置主题、插件和其他配置来自定义自己的博客。Hexo具有快速、简单、易于扩展和使用等特点，目前被许多博客作者广泛采用。</li><li><strong>GitHub Pages</strong>：是一个网页托管服务，可以将静态网页或博客网站托管在GitHub上。通过使用GitHub Pages服务，你可以免费地创建自己的网站，并且可以使用自己的域名访问该网站。GitHub Pages支持多种技术堆栈，如HTML、CSS、JavaScript等，也可以集成Jekyll等博客生成器。通过将自己的代码托管到GitHub上，在代码更新时，GitHub Pages会自动刷新你的网站，使得网站的维护和更新变得更加方便和高效。因此，GitHub Pages是一个非常受欢迎的静态网页托管服务，也是许多程序员和博客作者常用的工具。</li></ul><p>利用这两个技术就能够免费地搭建一个属于自己的网站，如本站一样。</p><h4 id="Hexo主要命令"><a href="#Hexo主要命令" class="headerlink" title="Hexo主要命令"></a>Hexo主要命令</h4><p>hexo常用的命令就以下6个：</p><ul><li><code>hexo init [folder]</code>: 新建一个网站。如果没有设置 <code>folder</code> ，Hexo 默认在目前的文件夹建立网站；</li><li><code>hexo new file_name</code>：新建一篇文章。</li><li><code>hexo generate</code>: 生成静态文件；</li><li><code>hexo server</code>: 启动服务器。默认情况下，访问网址为： <code>http://localhost:4000/</code>；</li><li><code>hexo deploy</code>: 部署网站（后文会用得）；</li><li><code>hexo clean</code>: 清除缓存文件 (<code>db.json</code>) 和 <code>public</code> 文件夹下已生成的静态文件。</li></ul><hr><h3 id="使用Hexo本地建站"><a href="#使用Hexo本地建站" class="headerlink" title="使用Hexo本地建站"></a>使用Hexo本地建站</h3><h4 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h4><p>安装hexo十分简单，根据 Hexo 的官方文档 <a class="link"   href="https://hexo.io/zh-cn/docs/index.html" >开始使用 — 概述<i class="fas fa-external-link-alt"></i></a>，安装 Hexo 的前提是先安装 <a class="link"   href="https://nodejs.org/zh-cn/" >Node.js<i class="fas fa-external-link-alt"></i></a> 和 <a class="link"   href="https://git-scm.com/download" >Git<i class="fas fa-external-link-alt"></i></a>，在安装完这两者后，安装 Hexo 很简单，只需在终端（cmd、Git bash、Node.js command prompt 均可）中敲入如下命令，回车等待安装完成。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h4 id="建立本地站点"><a href="#建立本地站点" class="headerlink" title="建立本地站点"></a>建立本地站点</h4><ul><li><p><strong>Step 1:</strong> 先在电脑中的某一位置建立好 <code>your_name.github.io</code> 文件夹，比如 <code>D:\Blog\your_name.github.io</code>；</p></li><li><p><strong>Step 2:</strong> 在终端（最好使用git bash）中切换到 <code>your_name.github.io</code> 文件夹所在的路径。</p></li><li><p><strong>Step 3:</strong> 由于默认的 NPM 镜像实在太慢太慢，我们把源替换成淘宝的镜像，在终端中执行如下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry &quot;https://registry.npm.taobao.org&quot;</span><br></pre></td></tr></table></figure></li><li><p><strong>Step 4:</strong> 根据 Hexo 的官方文档 <a class="link"   href="https://hexo.io/zh-cn/docs/setup.html" >开始使用 — 建站<i class="fas fa-external-link-alt"></i></a>，依次执行下面两条命令，建立我们的新网站：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>由于使用了淘宝的镜像，加载会很快。完成后，<code>your_name.github.io</code> 文件夹下面的目录如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure><ul><li><code>_config.yml</code> 文件存放着网站的配置信息，可以在这里配置大部分的参数。</li><li><code>package.json</code> 文件存放着插件信息，从中可以查看那些插件已经安装。</li><li><code>scaffolds</code> 是模板文件夹，新建文章时，Hexo 会根据 scaffold 来建立文件，不过这个模板和后面的主题里指的模板不一样。</li><li><code>source</code> 是存放用户资源的地方的文件夹，除 <code>_posts</code> 文件夹之外，开头命名为 <code>_</code> (下划线) 的文件 &#x2F; 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 <code>public</code> 文件夹（别急，等下会生成的），而其他文件会被拷贝过去。</li><li><code>themes</code> 主题文件夹，Hexo 会根据主题来生成静态页面，我们以后自己安装的主题也都会放在这个文件夹下面，默认的 landscape 主题已经在里面了。</li></ul></li><li><p><strong>Step 5:</strong> 根据 Hexo 的官方文档 <a class="link"   href="https://hexo.io/zh-cn/docs/commands.html" >开始使用 — 命令<i class="fas fa-external-link-alt"></i></a>，在终端中敲入 <code>hexo server</code> 命令（确保路径仍在 <code>your_name.github.io</code> 下），可以在 <a class="link"   href="http://localhost:4000/" >http://localhost:4000/<i class="fas fa-external-link-alt"></i></a> 中看到我们网站默认的样子了。</p></li></ul><h4 id="配置站点"><a href="#配置站点" class="headerlink" title="配置站点"></a>配置站点</h4><p>上节说到，<code>_config.yml</code> 文件存放了网站的配置信息。我们可以在 <code>_config.yml</code> 中大部份的配置，里面每一个参数的含义可以查看 Hexo 的官方文档 <a class="link"   href="https://hexo.io/zh-cn/docs/configuration.html" >开始使用 — 配置<i class="fas fa-external-link-alt"></i></a> ，这里我暂且只修改了 <code>title</code>，<code>subtitle</code> 和 <code>author</code>，替换成自己网站的名字和作者名即可。</p><p>如果有同学觉得默认的网址链接有点长，可以将 <code>permalink</code> 改成如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">permalink: :title/</span><br></pre></td></tr></table></figure><p><code>per_page</code> 决定首页显示多少篇文章。其余的设置，比如 theme，deploy 我们之后用到了再来更改。</p><h4 id="编写blog内容"><a href="#编写blog内容" class="headerlink" title="编写blog内容"></a>编写blog内容</h4><p>新建一篇blog的方法有两种：</p><ul><li><p>一种是直接使用hexo提供的命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new 文章文件名</span><br></pre></td></tr></table></figure><p>执行完该命令，会在<code>/source/_posts</code>文件夹下产生一个Markdown文件，再去编辑内容即可。</p></li><li><p>另外一种方法是在 <code>_posts</code> 文件夹下，新建一个 Markdown 文件，或者把你以前有的 Markdown 文件复制进来，根据 Hexo 的官方文档 <a class="link"   href="https://hexo.io/zh-cn/docs/front-matter.html" >基本操作 — Front-matter<i class="fas fa-external-link-alt"></i></a> ，写好你的第一篇文章，比如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">title: Test for Hexo</span><br><span class="line">date: 2016/12/7 20:46:25</span><br><span class="line">categories:</span><br><span class="line">- Diary</span><br><span class="line">tags:</span><br><span class="line">- PS3</span><br><span class="line">- Games</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">Hexo Test.</span><br></pre></td></tr></table></figure><p>这里，Front-matter 是文件最上方以 <code>---</code> 分隔的区域，用于指定文章的标题、建立日期、更新日期等，如果主题模板还支持分类和标签的话（比如默认的 landscape 主题），还可以指定分类和标签。</p></li></ul><h4 id="生成blog"><a href="#生成blog" class="headerlink" title="生成blog"></a>生成blog</h4><p>根据 Hexo 的官方文档 <a class="link"   href="https://hexo.io/zh-cn/docs/generating.html" >基本操作 — 生成文件<i class="fas fa-external-link-alt"></i></a>，在终端中敲入如下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure><p>Hexo 会替我们刚加入到 <code>_posts</code> 文件夹下的 markdown 文件生成静态文件。运行 <code>hexo server</code> 可以在 <a class="link"   href="http://localhost:4000/" >http://localhost:4000/<i class="fas fa-external-link-alt"></i></a> 中看到我们新添加的网页内容了。至此，我们采用默认主题 landscape 的网站已经生成了。</p><h4 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h4><p>默认的主题landscape比较简单，hexo为我们提供了很多中网站主题（截至目前官方主题有384个），且都是开源的，我们可以根据自己的喜好选取并修改网站主题。<a class="link"   href="https://hexo.io/themes/" >Themes | Hexo<i class="fas fa-external-link-alt"></i></a> 是hexo提供的官方主题，本站目前使用的是XPoet的keep主题，主打的就是一个简单优雅，哈哈哈，喜欢的小伙伴可以去<a class="link"   href="https://keep-docs.xpoet.cn/" >keep主题使用指南<i class="fas fa-external-link-alt"></i></a>上学习。</p><p>以本站的keep theme为例：</p><ul><li><p>首先，安装keep主题</p><ul><li><p>如果你在使用 Hexo 5.0 或更高版本，最简单的安装方式是通过 NPM <strong>（推荐）</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd hexo-site</span><br><span class="line">npm install hexo-theme-keep</span><br></pre></td></tr></table></figure></li><li><p>或者使用 Git 克隆整个仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd hexo-site</span><br><span class="line">git clone https://github.com/XPoet/hexo-theme-keep themes/keep</span><br></pre></td></tr></table></figure></li></ul></li><li><p>然后，修改配置</p><ul><li><p>Keep 主题安装完成后，在 Hexo 配置文件 <code>_config.yml</code> 中将 <code>theme</code> 设置为 <code>keep</code>。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: keep</span><br></pre></td></tr></table></figure></li></ul></li></ul><p>如此，便可快速使用keep主题样式，其他更多的配置，详见下一篇blog——<a class="link"   href="https://lucky-carp.github.io/keep-theme/" >《Keep theme，simple and elegant》<i class="fas fa-external-link-alt"></i></a></p><hr><h3 id="网站部署到GitHub"><a href="#网站部署到GitHub" class="headerlink" title="网站部署到GitHub"></a>网站部署到GitHub</h3><p>部署到 Github 的命令行操作都在 Git Bash 中完成。事实上，这一环节非常简单，其实本质上就是一个 <code>git push</code> 操作，并且，hexo为我们提供的deploy命令将会更加方便。</p><h4 id="创建远程仓库"><a href="#创建远程仓库" class="headerlink" title="创建远程仓库"></a>创建远程仓库</h4><p>要在 Github 上创建项目，当然首先需要<a class="link"   href="https://github.com/join?source=header-home" >注册 Github帐号<i class="fas fa-external-link-alt"></i></a>。然后新建一个用于存放blog文件的仓库，要注意的是，Repository name 一定要是 <code>your_name.github.io</code> ，<code>your_name</code> 是你的 Github 用户名。另外，仓库的权限要是public的，否则，使用github page将会收费。</p><h4 id="登录Git"><a href="#登录Git" class="headerlink" title="登录Git"></a>登录Git</h4><p>根据 Github 的官方文档 <a class="link"   href="https://help.github.com/articles/set-up-git/#setting-up-git" >Setting up Git<i class="fas fa-external-link-alt"></i></a>，这一操作的目的是 Tell Git your <em>name</em> so your commits will be properly labeled 和 Tell Git the <em>email address</em> that will be associated with your Git commits，也就是告诉版本控制软件 Git 接下来这台电脑上提交的文件是 E-mail 地址是什么的谁谁谁提交的。在 Git Bash 中执行如下代码即可：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;YOUR NAME&quot;</span><br><span class="line">git config --global user.email &quot;YOUR EMAIL ADDRESS&quot;</span><br></pre></td></tr></table></figure><p>其中，<code>YOUR NAME</code> 是自己取的名字，<code>YOUR EMAIL ADDRESS</code> 是自己的邮箱。由于自己的博客网站就自己一个人提交，所以就都设置成跟 Github 用户名和邮箱相同了。但其实是可以不同的，因为对于很多项目，并不只有一个开发者，Github 允许多人向同一个 Repo 提交，这里提供用户名和邮箱，只是为了搞清楚哪些代码是谁谁谁提交的。</p><h4 id="身份认证"><a href="#身份认证" class="headerlink" title="身份认证"></a>身份认证</h4><p>我们的最终目的是实现在终端中敲入 <code>hexo deploy</code> 后，Hexo 会将我们本地的 <code>public</code> 文件夹下的东西上传到 Github 服务器，这样我们就可以通过 <code>your_name.github.io</code> 这个域名（<code>your_name</code> 是你的 Github 用户名）看到我们已经上网的博客网站了。</p><p>为了实现这个目的，首先我们先要让本地的电脑和 Github 服务器建立起某种联系，也就是让 Github 服务器信任由我这台电脑提交的东西，接受，并存放到 <code>your_name.github.io</code> 这个 Repo 下面，与 Github 服务器建立信任的这个环节就是身份认证（Authenticating ）。根据 Github 的官方文档 <a class="link"   href="https://help.github.com/articles/set-up-git/#next-steps-authenticating-with-github-from-git" >Authenticating with GitHub from Git<i class="fas fa-external-link-alt"></i></a> 这里，我们选择 <a href="https://help.github.com/articles/set-up-git/#connecting-over-ssh"><strong>Connecting over SSH</strong></a> 这一种方式。在 Github 的官方文档 <a class="link"   href="https://help.github.com/categories/ssh/" >Categories &#x2F; SSH<i class="fas fa-external-link-alt"></i></a> 下，我们能找到关于 Github 与 SSH 的资料。</p><h5 id="生成新的-SSH-key"><a href="#生成新的-SSH-key" class="headerlink" title="生成新的 SSH key"></a>生成新的 SSH key</h5><p>根据 Github 的官方文档 <a class="link"   href="https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/#generating-a-new-ssh-key" >Generating a new SSH key<i class="fas fa-external-link-alt"></i></a> ， 我们在 Git Bash 下执行如下命令，生成 SSH key</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -C &quot;your_email@example.com&quot;</span><br></pre></td></tr></table></figure><p>其中，<code>your_email@example.com</code> 是你的 Github 注册邮箱。然后，Git Bash 中会出现</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Generating public/private rsa key pair.</span><br></pre></td></tr></table></figure><p>表示新的 SSH 已经生成了。随后会出现</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Enter a file in which to save the key</span><br><span class="line">(/Users/you/.ssh/id_rsa): [Press enter]</span><br></pre></td></tr></table></figure><p>这里 <code>id_rsa</code> 是生成的 key 文件的文件名，默认都是这个；如果不是，在后面用到 <code>id_rsa</code> 的地方请替换成出现的名字。这条信息是让你选择 SSH key 存放的地点，按回车选择默认的即可。回车后，还会出现</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Enter passphrase (empty for no passphrase): [Type a passphrase]</span><br><span class="line">Enter same passphrase again: [Type passphrase again]</span><br></pre></td></tr></table></figure><p>让你设置使用 SSH 密钥时的密码，由于我们都是在自己个人的电脑上操作，所以仍然回车，不设置密码即可。</p><h5 id="将-SSH-key-添加到-ssh-agent"><a href="#将-SSH-key-添加到-ssh-agent" class="headerlink" title="将 SSH key 添加到 ssh-agent"></a>将 SSH key 添加到 ssh-agent</h5><p><a class="link"   href="https://en.wikipedia.org/wiki/Ssh-agent" >ssh-agent<i class="fas fa-external-link-alt"></i></a> 是一个在本地登录会话持续时间内，将未加密的密钥存储在内存中，并使用 Unix 域套接字与 SSH 客户端进行通信的程序。根据 Github 的官方文档 <a class="link"   href="https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/#adding-your-ssh-key-to-the-ssh-agent" >Adding your SSH key to the ssh-agent<i class="fas fa-external-link-alt"></i></a> ， 我们在 Git Bash 下执行如下命令，开启 ssh-agent</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eval &quot;$(ssh-agent -s)&quot;</span><br></pre></td></tr></table></figure><p>然后我们要将这个 SSH key 添加到 ssh-agent 里去，运行如下命令，其中 <code>id_rsa</code> 是你的 key 文件的文件名：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-add ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure><h5 id="将-SSH-key-添加到-Github-账户"><a href="#将-SSH-key-添加到-Github-账户" class="headerlink" title="将 SSH key 添加到 Github 账户"></a>将 SSH key 添加到 Github 账户</h5><p>Github 的官方文档 <a class="link"   href="https://help.github.com/articles/adding-a-new-ssh-key-to-your-github-account/" >Adding a new SSH key to your GitHub account<i class="fas fa-external-link-alt"></i></a> 已经图文并茂将如何在 Github帐号中添加 SSH 介绍的非常清楚了。先是在 Git Bash 中将 SSH Key 拷贝出来：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">clip &lt; ~/.ssh/id_rsa.pub</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Copies the contents of the id_rsa.pub file to your clipboard</span></span><br></pre></td></tr></table></figure><p><code>id_rsa</code> 是你刚才的 SSH Key 文件。此时，SSH Key 已经在我们的剪切板里了。然后登录 Github 帐号，依次点击自己的头像，<strong>Settings</strong>，<strong>SSH and GPG keys</strong>，<strong>New SSH key</strong> 或者 <strong>Add SSH key</strong>， 在 <strong>Title</strong> 这里输入 Key 的label，比如 <code>your_name - PC</code>，然后在 Key 里面把 <strong>SSH Key</strong> 粘贴进去，点击 <strong>Add SSH key</strong> 大功告成。</p><p><strong>以上部分就是在生成身份认证的凭证 SSH key，分别放在自己本地电脑和 Github 服务器上，以后向 Github 提交内容的时候，两者的 Key 匹配就可以了，省去了我们每次输密码的时间。</strong></p><h5 id="测试-SSH-连接"><a href="#测试-SSH-连接" class="headerlink" title="测试 SSH 连接"></a>测试 SSH 连接</h5><p>在大功告成之前，为了稳妥起见，我们来测试一下自己跟 Github 服务器 SSH 连接是否已经建立起来了。Github 的官方文档 <a class="link"   href="https://help.github.com/articles/testing-your-ssh-connection/" >Testing your SSH connection<i class="fas fa-external-link-alt"></i></a> 已经将次环节介绍得非常详细了。我们要做得就是在 Git Bash 中敲入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>你可能会看到类似于</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">The authenticity of host &#x27;github.com (192.30.252.1)&#x27; can&#x27;t be established.</span><br><span class="line">RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.</span><br><span class="line">Are you sure you want to continue connecting (yes/no)?</span><br></pre></td></tr></table></figure><p>没关系的，输入 <code>yes</code> 敲回车，就可以看到如下的成功信息了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hi username! You&#x27;ve successfully authenticated, but GitHub does not</span><br><span class="line">provide shell access.</span><br></pre></td></tr></table></figure><p>至此为止，我们已经建立起了跟 Github 服务器的连接。其实我们也可以用 <code>git push</code> 命令，提交 <code>public</code> 文件夹下面的内容，不过 Hexo 更我们提供了更方便的途径。</p><h4 id="Hexo-部署"><a href="#Hexo-部署" class="headerlink" title="Hexo 部署"></a>Hexo 部署</h4><p>Hexo 提供了 <code>hexo deploy</code> 命令，可以方便地将整个 <code>public</code> 文件夹部署到 Github 服务器上去。根据 Hexo 的官方文档 <a class="link"   href="https://hexo.io/zh-cn/docs/deployment.html" >基本操作 — 部署<i class="fas fa-external-link-alt"></i></a> 我们只需要做以下两步：</p><ul><li><strong>Step 1:</strong> 在终端中运行如下命令，安装 <code>hexo-deployer-git</code> 插件：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><ul><li><p><strong>Step 2:</strong> 在 <code>_config.yml</code> 中修改参数，如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/your_name/your_name.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>其中，your_name 是你的 Github 帐号名。<code>repo</code> 对应的是你 <code>your_name.github.io</code> 这个项目的库（Repository）地址，进入这个项目的主页，点击 <strong>Clone or download</strong> 下拉菜单也能看到。<code>branch</code> 是分支名称，如果使用的是 GitHub 或 GitCafe 的话，程序会尝试自动检测，通常都是 <code>master</code>。 <strong>注意，冒号后的空格非常重要，一定要有！</strong></p><p>在第一次部署的时候，Github 还会跳出来一个小窗口，让你输入 Github 帐号和密码，输入即可。</p></li></ul><p>博客第一次创建，即使 deploy 成功了，但仍然不会立刻可以访问，还需要等待 15 分钟以上。可以使用如下方法，让blog的内容快速更新：</p><ul><li><strong>Step 1:</strong> 到 your_name.github.io 项目的 Github 主页，上方最右侧有一个 <strong>Settings</strong>，点击 <strong>Settings</strong>，拉到 <strong>Pages</strong>，在Build and deployment选项下有一个branch选项，选择部署的分支(master&#x2F;(root))，点击save，就能够看到your_name.github.io 可以访问了。</li><li><strong>Step 2:</strong> 再试着 <code>hexo deploy</code> 一次，如果页面正常了那就大功告成了，假使遇到 Permission Denied，再 <code>hexo deploy</code> 一次就好。</li></ul><p>到目前为止，我们的blog就已经搭建好了，可以根据生成的网址进行访问，如本站网址：<a class="link"   href="https://lucky-carp.github.io/%E3%80%82%E5%BD%93%E7%84%B6%EF%BC%8C%E6%9C%89%E4%BA%9B%E5%90%8C%E5%AD%A6%E5%8F%AF%E8%83%BD%E5%B8%8C%E6%9C%9B%E8%83%BD%E5%A4%9F%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E8%BE%93%E5%85%A5%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9F%9F%E5%90%8D%EF%BC%8C%E6%AF%94%E5%A6%82" >https://lucky-carp.github.io/。当然，有些同学可能希望能够在浏览器中输入自己的域名，比如<i class="fas fa-external-link-alt"></i></a> <code>your.site</code>，就可以看到自己的网站。这就需要绑定自己的独立域名，本站在写本篇文章的时候还未绑定域名，但在此也进行说明，以便后续绑定域名。</p><hr><h3 id="绑定独立域名"><a href="#绑定独立域名" class="headerlink" title="绑定独立域名"></a>绑定独立域名</h3><h4 id="购买域名"><a href="#购买域名" class="headerlink" title="购买域名"></a>购买域名</h4><p>域名提供商非常多，比如 Godaddy、 DNSPod 和 Gandi ，这三者都支持支付宝付款。我预计要在Gandi 上购买域名：<code>luckycarp.me</code>。域名注册很简单，不过需要特别注意的是，虽然 Gandi 提供了简体中文的界面，但填写注册信息的时候，<strong>一定要填英文字符！！！</strong>。输入中文也能够注册成功，但坑的是什么呢？在你付完款以后，会域名创建不成功，原因卡在比如地址信息中的中文字符集超出范围了。遇上了这种情况，也不要慌，在 Gandi 的 <strong>账户管理</strong> 中的 <strong>更新账户资讯</strong> 中把中文字符改成英文的，然后再在 <strong>服务</strong> 中的 <strong>域名</strong> 这里点击类似重启该操作字样的按钮即可。至此，第一步购买域名已经完成。</p><ul><li><p><strong>Step 1: 告诉 Github <code>your_name.github.io</code> 对应哪个域名</strong></p><ul><li><p>在 <code>source</code> 文件夹下添加一个 <code>CNAME</code> 文件，里面就一行内容，写上自己的域名，比如 <code>your.site</code>。 在终端中运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure></li><li><p>Hexo 在生成 <code>public</code> 文件夹内容的时候，会自动把 <code>CNAME</code> 文件复制过去，这样，<code>public</code> 文件夹下就也有 <code>CNAME</code> 文件了。再运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>将其部署到 Github，让 Github 知道 <code>your_name.github.io</code> 对应哪个域名。</p></li></ul></li><li><p><strong>Step 2: 告诉 Gandi 我要用 DNSPod 解析域名</strong></p><p>登录 Gandi，点击 <strong>服务</strong> 中的 <strong>域名</strong> 中你购买的域名，进入 <strong>域名 &gt; your.site</strong> 页面，your.site 是你购买的域名，在网页的下方找到 <strong>修改伺服器</strong>，点击进入。删掉 Gandi 原来自带的 3 个 DNS 服务器地址，填入 DNSPod 的域名服务器。那 DNSPod 的域名服务器是什么呢？在 DNSPod 的官方文档 <a class="link"   href="https://support.dnspod.cn/Kb/showarticle/?qtype=%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B&tsid=178" >DNSPod 各个套餐的 DNS 地址<i class="fas fa-external-link-alt"></i></a> 中可以知道，DNSPod 免费 DNS 服务器的地址为：<code>f1g1ns1.dnspod.net</code> 和 <code>f1g1ns2.dnspod.net</code>。在 Gandi 那里把这两个地址依次填入，保存。</p></li><li><p><strong>Step 3: 告诉 DNSPod 域名对应的网站存放在哪台服务器上</strong></p><p>DNSPod 的官方文档 <a class="link"   href="https://support.dnspod.cn/Kb/showarticle/tsid/177/" >学会使用 DNSPod，仅需三步<i class="fas fa-external-link-alt"></i></a> 已经图文并茂的将如何告诉 DNSPod 域名对应的网站存放在哪台服务器上介绍地非常详细了。在注册完 DNSPod 后，点击 <strong>添加域名</strong>，添加上自己购买的域名，点击 <strong>确定</strong>，再点击刚添加的域名，在域名记录管理界面，点击 <strong>添加记录</strong>，添加两条 A 记录即可。</p></li><li><p>其中，<code>192.30.252.153</code> 和 <code>192.30.252.154</code> 为 GIthub 服务器的 IP 地址，可以从 Github 的官方文档 <a class="link"   href="https://help.github.com/articles/setting-up-an-apex-domain/#configuring-a-records-with-your-dns-provider" >Configuring A records with your DNS provider<i class="fas fa-external-link-alt"></i></a> 知道。DNSPod 域名解析生效非常快，只要等待十来秒即可用自己的域名访问了。至此，拥有独立域名的博客网站都已经搭建完了。</p></li></ul><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li>本文主要参考了Grok的blog：<a class="link"   href="http://lowrank.science/Hexo-Github/" >《用Hexo搭建博客》<i class="fas fa-external-link-alt"></i></a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;2022年之前的blog收录在gitee pages，网站为：&lt;code&gt;https://liyang199802.gitee.io/&lt;/code&gt;，仍可访问。但是由于gitee现在对文件中的敏感词汇审查过于严格，导致检查文章中词汇耗费了大量时间，因此，今年开始使用gith</summary>
      
    
    
    
    <category term="Technology" scheme="http://example.com/categories/Technology/"/>
    
    
    <category term="Tool" scheme="http://example.com/tags/Tool/"/>
    
  </entry>
  
</feed>
